{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tags-query-tsx-22a43b6597b037c321c3.js","mappings":"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","sources":["webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/tags.tsx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/tags-query.tsx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/tags.tsx","webpack://gwiyeom-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/seo.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Box, Flex } from \"theme-ui\"\n// @ts-ignore\nimport { kebabCase } from \"@lekoarts/themes-utils\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport Seo from \"./seo\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\nexport type MBTagsProps = {\n  list: {\n    fieldValue: string\n    totalCount: number\n  }[]\n}\n\nconst Tags = ({ list }: MBTagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <Heading as=\"h1\" variant=\"styles.h1\">\n        Tags\n      </Heading>\n      <Box mt={[4, 5]}>\n        {list.map((listItem) => (\n          <Flex key={listItem.fieldValue} mb={[1, 1, 2]} sx={{ alignItems: `center` }}>\n            <Link\n              sx={(t) => ({ ...t.styles?.a, variant: `links.listItem`, mr: 2 })}\n              to={replaceSlashes(`/${basePath}/${tagsPath}/${kebabCase(listItem.fieldValue)}`)}\n            >\n              {listItem.fieldValue} <span sx={{ color: `secondary` }}>({listItem.totalCount})</span>\n            </Link>\n          </Flex>\n        ))}\n      </Box>\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const Head: HeadFC = () => <Seo title=\"Tags\" />\n","import { graphql } from \"gatsby\"\nimport TagsComponent, { Head } from \"../components/tags\"\n\nexport default TagsComponent\n\nexport { Head }\n\nexport const query = graphql`\n  {\n    allPost(sort: { tags: { name: DESC } }) {\n      group(field: { tags: { name: SELECT } }) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Tags, { Head } from \"../../../components/tags\"\n\ntype Props = {\n  data: {\n    allPost: {\n      group: {\n        fieldValue: string\n        totalCount: number\n      }[]\n    }\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreTags({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Tags list={allPost.group} {...props} />\n}\n\nexport { Head }\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","list","tagsPath","basePath","useMinimalBlogConfig","jsx","Layout","Heading","as","variant","Box","mt","map","listItem","Flex","key","fieldValue","mb","sx","alignItems","Link","t","_t$styles","styles","a","mr","to","replaceSlashes","kebabCase","color","totalCount","Head","Seo","title","props","data","allPost","React","Tags","Object","assign","group","description","pathname","image","children","canonicalUrl","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","seo","url","name","content","property","rel","type","sizes","href","withPrefix"],"sourceRoot":""}