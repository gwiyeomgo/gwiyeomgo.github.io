{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-aws-2025-04-02-aws-route-53-mdx-fcc3f019b3b2a5f1c1d2.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/server/aws/2025-04-02-aws-route53.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"사이드 프로젝트를 진행하면서 테스트로 배포를 하려고 한다\\n사이드 프로젝트를 aws-route53 에서 도메일을 연결해서 주소로 접속하도록 변경하려고 한다\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"DNS 의 개념\\nDomain Name System\\n도메인 이름을 IP 주소로 바꿔주는 시스템\\n레코드 = 도메인 이름과 연결된 IP 주소\"), \"\\n\", React.createElement(_components.li, null, \"ROUTE 53 기본 역할과 호스팅 영역과 레코드의 개념\\nROUTE 53 = 클라우드의 DNS\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"퍼블릭 호스팅 영역 : 인터넷에서 트래픽을 라우팅하고자 하는 방법을 지정하는 레코드를 포하는 것\"), \"\\n\", React.createElement(_components.li, null, \"프라이빗 호스팅 영역 : VPC에서 트래픽을 라우팅하고자 하는 방법을 지정하는 레코드를 포하는 것\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"대표 레코드 유형\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"A\\n도메인 이름과 IPv4 주소를 매핑하는 레코드\"), \"\\n\", React.createElement(_components.li, null, \"AAAA\\n도메인 이름과 IPv6 주소 매핑하는 레코드\"), \"\\n\", React.createElement(_components.li, null, \"CNAME(별칭(Alias)을 지정할 때 사용하는 레코드) ex) \", React.createElement(_components.code, null, \"www .example.com→example.com\")), \"\\n\", React.createElement(_components.li, null, \"MX (메일 서버를 지정하는 레코드) ex) \", React.createElement(_components.code, null, \"example.com MX 10 mail1.example.com\")), \"\\n\", React.createElement(_components.li, null, \"NS (해당 도메인을 관리하는 권한 있는 네임서버를 지정) 도메인을 구입한 곳 (예: 가비아, 카페24, AWS Route 53 등)에서 설정함\"), \"\\n\", React.createElement(_components.li, null, \"SOA(Start of Authority)\\nDNS 존(zone)의 최상위 정보를 담고 있는 레코드,\\nSOA 레코드는 도메인 DNS 존의 시작점으로,\\n기본 네임서버와 관리자 정보, 복제 주기 등을 정의하며 존당 하나만 존재\\n권한 시작 레코드,도메인에 대한 기본 DNS 정보 식별\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"ROUTE 53 라우팅 방식\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"지연 시간 기반 라우팅\\n지연 시간 latency 이 가장 낮은 리전의 IP 주소로 라우팅하는 방식\"), \"\\n\", React.createElement(_components.li, null, \"가중치 기반 라우팅\\nIP 주소나 ELB DNS 주소에 각각 가중치를 부여하여 가중치에 따라 라우팅하는 방식\"), \"\\n\", React.createElement(_components.li, null, \"지역 기반 라우팅\\n지역에 따라서 각각 IP 주소로 라우팅하는 방식\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"(AWS 접속)\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"호스팅 영역 생성\\nAWS Route53 > 호스팅 영역 > 호스팅 영역 생성 ex) \", React.createElement(_components.code, null, \"gwiyeom.org\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"레코드 생성 -> Route53 레코드는 DNS 요청이 들어왔을 때 어디로 보낼지 정의\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"백엔드 서비스\\n트레픽 라우팅 대상 : API Gateway API 대한 별칭\"), \"\\n\", React.createElement(_components.li, null, \"프론트 화면\\n트레픽 라우팅 대상 : cloudfront 배포에 대한 별칭\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"트래픽 라우팅 대상 설정 =  Route53에 도메인을 등록해두고,그 도메인으로 들어오는 요청을 어느 AWS 서비스로 보낼지 지정하는 설정\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"1. 백엔드 서비스\\n예: api.gwiyeom.org\\n\\n트래픽 라우팅 대상: API Gateway\\n→ api.gwiyeom.org 요청이 오면, 지정한 API Gateway endpoint로 라우팅되도록 설정\\n\\n📌 Route53에서 A 레코드(별칭 ALIAS) 를 만들고,\\n대상 선택에서 \\\"API Gateway → 리전 선택 → 배포된 API 선택\\\" 식으로 연결\\n\\n2. 프론트 화면 (웹사이트)\\n예: gwiyeom.org 또는 www.gwiyeom.org\\n\\n트래픽 라우팅 대상: CloudFront → 사용자가 사이트를 열면 CloudFront 배포 주소로 연결\\n\\n📌 이 경우도 Route53에서 A 레코드(별칭 ALIAS) 로,\\nCloudFront 배포 도메인 (d1234abc.cloudfront.net) 을 선택하여 연결합니다.\\n\\n\\n\\n[사용자 브라우저]\\n      |\\n      v\\n api.gwiyeom.org → Route53 → API Gateway\\n      |\\n      v\\n gwiyeom.org     → Route53 → CloudFront → S3 or 앱서버\\n\\n\")), \"\\n\", React.createElement(_components.h1, null, \"배경2\"), \"\\n\", React.createElement(_components.p, null, \"AWS EKS에 Pod를 실행 했음\\n외부에서 브라우저나 클라이언트가 접근할 수 있도록 Route 53을 통해 도메인을 연결\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Route53 Domain\\n     ↓\\n[ AWS Load Balancer ]\\n     ↓\\n[ Kubernetes Ingress (또는 Service of type=LoadBalancer) ]\\n     ↓\\n[ EKS Pod (컨테이너) ]\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/aws/2025-04-02-aws-route53.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","ol","li","ul","code","pre","_provideComponents","components","React","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}