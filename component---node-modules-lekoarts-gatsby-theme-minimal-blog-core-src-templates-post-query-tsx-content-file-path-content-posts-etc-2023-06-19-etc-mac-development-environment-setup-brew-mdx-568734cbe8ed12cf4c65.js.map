{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-etc-2023-06-19-etc-mac-development-environment-setup-brew-mdx-568734cbe8ed12cf4c65.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/etc/2023-06-19-etc-mac-development-environment-setup-brew.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    pre: \"pre\",\n    code: \"code\",\n    hr: \"hr\",\n    ol: \"ol\",\n    li: \"li\",\n    a: \"a\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"mac m2 구입후 개발환경을 셋팅했던 기록을 남깁니다.\"), \"\\n\", React.createElement(_components.h1, null, \"root 초기 설정\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"\\t\\n\\tsudo -s\\n\\t\\t//terminal 에서 현재 접속 계정에 password 입력\\n\\twhoami \\n\\t\\t//현재 접속한 사람이 누군지 확인 => root\\n\\tpasswd root \\n\\t\\t//root 비밀번호 초기화\\n\\texit\\n\\t\\t//접속 끝냄\\n\\t\\n\")), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, null, \"Brew 설치\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://brew.sh/index_ko\"\n  }, \"https://brew.sh/index_ko\"), \" 링크에서 설치 명령어를 가져와서 터미널에서 실행\"), \"\\n\", React.createElement(_components.li, null, \"Next steps  이후 실행하라는 명령어를 실행해서 path 지정\"), \"\\n\", React.createElement(_components.li, null, \"brew --version 입력시 버전을 확인\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"tip\\nzsh: command not found: brew 발생\\n터니널에서 \", React.createElement(_components.code, null, \"vi ~/.zshrc \"), \"\\n\", React.createElement(_components.code, null, \"export PATH=/opt/homebrew/bin:$PATH\"), \" 를 입력하고 수정 후 :wq\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"tip\\ngrep 리눅스 명령어\\nbrew list | grep go\\nbrew 로 받은 목록에서 go 찾기\\n\", React.createElement(_components.a, {\n    href: \"https://coding-factory.tistory.com/802\"\n  }, \"https://coding-factory.tistory.com/802\")), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"zsh?\"), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, null, \"iterm 실행\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"iTerm2: \", React.createElement(_components.a, {\n    href: \"https://iterm2.com/\"\n  }, \"https://iterm2.com/\")), \"\\n\", React.createElement(_components.li, null, \"iTerm 셋팅: \", React.createElement(_components.a, {\n    href: \"https://gist.github.com/kevin-smets/8568070\"\n  }, \"https://gist.github.com/kevin-smets/8568070\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"brew install --cask iterm2\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"iterm2 터미널 배경색 설정\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Preferences > colors > 우측하단 선택박스 => Tango Dark\"), \"\\n\", React.createElement(_components.li, null, \"Preferences > text > 폰트설정\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.p, null, \"#iterm 꾸미기\\n(참고) oh my zsh 삭제하기\\n\", React.createElement(_components.code, null, \"source ~/.oh-my-zsh/tools/uninstall.sh\")), \"\\n\", React.createElement(_components.h2, null, \"Oh My Zsh\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"git clone https://github.com/romkatv/powerlevel10k.git $ZSH_CUSTOM/themes/powerlevel10k\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"vi ~/.zshrc\"), \" 실행 후 \", React.createElement(_components.code, null, \"ZSH_THEME=\\\"powerlevel10k/powerlevel10k\\\"\")), \"\\n\", React.createElement(_components.li, null, \"zsh-syntax-highlighting 설치\\n\", React.createElement(_components.code, null, \"brew install zsh-syntax-highlighting\"), \"\\n다운받고 vi ~/.zshrc 아래처럼 변경\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"    pligins=( \\n    git\\n    zsh-syntax-highlighting\\n    )\\n\")), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, null, \"nvm (node 관리 )\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"brew install nvm\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"tip not found\\n\", React.createElement(_components.code, null, \"mkdir ~/.nvm\"), \"\\n\", React.createElement(_components.code, null, \"vi ~/.zshrc\"), \" 에 설정\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"export NVM_DIR=\\\"$HOME/.nvm\\\"\\n[ -s \\\"/opt/homebrew/opt/nvm/nvm.sh\\\" ] && \\\\. \\\"/opt/homebrew/opt/nvm/nvm.sh\\\"  # This loads nvm\\n[ -s \\\"/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm\\\" ] && \\\\. \\\"/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm\\\"  # This loads nvm bash_completion\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"터미널 새창을 열고 노드 버전을 확인\\n\", React.createElement(_components.code, null, \"nvm -v\"), \"\\n\", React.createElement(_components.code, null, \"nvm install 버전 \"), \" ( 버전을 지정해 설치 가능 (ex)16.10.0 )\\n\", React.createElement(_components.code, null, \"nvm list\"), \" 로 설치한 노드의 버전을 확인\\n\", React.createElement(_components.code, null, \"nvm use 버전 \"), \"\\n변경 후 node -v 을 통해 현재 버전을 확인\\n\", React.createElement(_components.code, null, \"nvm uninstall 버전\"), \"\\n노드 버전 삭제\"), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, null, \"vs-code\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"brew install --cask visual-studio-code\")), \"\\n\", React.createElement(_components.h1, null, \"goland\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"brew install --cask goland\")), \"\\n\", React.createElement(_components.h1, null, \"go\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"brew install go\"), \" 또는 \", React.createElement(_components.code, null, \"brew install go@1.19\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"vi ~/.zshrc\"), \" 실행하고\\n\", React.createElement(_components.code, null, \"export PATH=\\\"/opt/homebrew/opt/go@1.19/bin:$PATH\\\"\"), \" 추가\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"go project 를 저장할 위치 설정\\n\", React.createElement(_components.code, null, \"mkdir -p $HOME/Documents/go\"), \"\\n\", React.createElement(_components.code, null, \"vi ~/.zshrc\"), \" 실행하고\\n\", React.createElement(_components.code, null, \"export GOPATH=$HOME/Documents/go\"), \"\\n\", React.createElement(_components.code, null, \"export PATH=$PATH:$GOPATH/bin\"), \"\\n셋팅\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, null, \"git\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"brew install git\"), \"\\n\", React.createElement(_components.code, null, \"brew info git\")), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, null, \"mysql\"), \"\\n\", React.createElement(_components.p, null, \"*\", React.createElement(_components.code, null, \"brew install mysql\"), \" or \", React.createElement(_components.code, null, \"brew install mysql@8.0\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"mysql -V\"), \"\\n만약 mysql 못찾는다면\\necho 'export PATH=\\\"/opt/homebrew/opt/mysql@8.0/bin:$PATH\\\"' >> ~/.zshrc\\nsource ~/.zshrc\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"🔹 source ~/.zshrc가 필요한 이유\\n~/.zshrc는 Zsh 쉘의 설정 파일로, 환경 변수(export PATH=... 같은 것들)를 설정하는 역할을 해.\\n새로운 설정을 적용하려면 터미널을 다시 시작하거나, source ~/.zshrc 명령어를 실행해야 해.\\n터미널을 다시 시작하기 귀찮을 때 source ~/.zshrc를 실행하면 바로 적용됨.\"), \"\\n\", React.createElement(_components.p, null, \"mysql --version 으로 설치되었는지 확인\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"서버시작  \", React.createElement(_components.code, null, \"mysql.server start\")), \"\\n\", React.createElement(_components.li, null, \"초기설정 명령어 실행 -> root 로그인됨 비밀번호 공백상태 -> 비밀번호 설정\\n\", React.createElement(_components.code, null, \"mysql_secure_installation\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"    Would you like to setup VALIDATE PASSWORD component? no\\n    Remove anonymous users? 설치시 익명사용자 제거? yes\\n\\n    Disallow root login remotely? root 원격 로그인 허용안함 ? yes\\n    Remove test database and access to it? 테스트 데이터 삭제 : yes\\n    Reload privilege tables now? yes\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"접속하기 (root 비밀번호 입력하여 접속)\\n\", React.createElement(_components.code, null, \"mysql -u root -p\")), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, null, \"mysql 워크밴치\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"brew install --cask mysqlworkbench\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"tip MySQLWorkbench 응용 프로그램이 예기치 않게 종료되었습니다\\nbrew 로 설치했는데 실행 후 종료하면 다음 에러가 발생했다\\n찾아보니 8.0.30 받아서 해결\\n\", React.createElement(_components.a, {\n    href: \"https://downloads.mysql.com/archives/workbench/\"\n  }, \"https://downloads.mysql.com/archives/workbench/\")), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"잘 사용하다가 10/12 mac 14 업데이트 후 문제 발생\\n\", React.createElement(_components.code, null, \"brew install --cask mysqlworkbench\"), \"를 실행해 최신 8.0.34 다운\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"이미 설치되어 있는 앱 관리 강제 설치\\nError: It seems there is already an App at ... 이런 에러 발생시\\n\", React.createElement(_components.code, null, \"brew install --cask mysqlworkbench --force \"), \" 로 실행\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"overwriting.\\n==> Removing App '/Applications/MySQLWorkbench.app'\\n==> Moving App 'MySQLWorkbench.app' to '/Applications/MySQLWorkbench.app'\\n🍺  mysqlworkbench was successfully installed!\\n\")), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, null, \"postman\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"brew install --cask postman\")), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, null, \"ssh\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"ssh-keygen -t -rsa -b 4096\"), \"\\n\", React.createElement(_components.code, null, \"cat ~/.ssh/id_rsa.pub\")), \"\\n\", React.createElement(_components.p, null, \"public key 를 읽어서 gitlab,github 에 추가\"), \"\\n\", React.createElement(_components.h1, null, \"wget\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"brew install wget\")), \"\\n\", React.createElement(_components.h1, null, \"참고\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://devocean.sk.com/blog/techBoardDetail.do?ID=164027\"\n  }, \"https://devocean.sk.com/blog/techBoardDetail.do?ID=164027\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/etc/2023-06-19-etc-mac-development-environment-setup-brew.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h1","pre","code","hr","ol","li","a","blockquote","ul","h2","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}