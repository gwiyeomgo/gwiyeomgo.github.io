{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-infra-2025-04-12-infra-carbot-mdx-08e722ea3f5a2f66beb7.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,KAAM,OACNC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,MAAO,KAAMU,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,qGAAsG,KAAMS,EAAAA,cAAoBb,EAAYK,IAAK,KAAMQ,EAAAA,cAAoBb,EAAYM,KAAM,KAAM,wNAAyN,KAAMO,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,8CAA+C,KAAMS,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,yBAA0B,KAAMU,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,6CAAgD,KAAMS,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,iIAAkI,KAAMS,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,4BAA6B,KAAMU,EAAAA,cAAoBb,EAAYK,IAAK,KAAMQ,EAAAA,cAAoBb,EAAYM,KAAM,KAAM,mIAAoI,KAAMO,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,2HAA4H,KAAMS,EAAAA,cAAoBb,EAAYK,IAAK,KAAMQ,EAAAA,cAAoBb,EAAYM,KAAM,KAAM,sGAAuG,KAAMO,EAAAA,cAAoBb,EAAYO,GAAI,CAC1qDO,MAAO,KACN,KAAMD,EAAAA,cAAoBb,EAAYQ,GAAI,KAAM,0FAA2FK,EAAAA,cAAoBb,EAAYM,KAAM,KAAM,qDAAsD,MAAO,KAAMO,EAAAA,cAAoBb,EAAYS,GAAI,KAAM,KAAMI,EAAAA,cAAoBb,EAAYQ,GAAI,KAAM,+DAAgE,MAAO,KAAMK,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,MAAO,KAAMU,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,8EAA+E,KAAMS,EAAAA,cAAoBb,EAAYU,GAAI,KAAM,OAAQ,KAAMG,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,2EAA4E,KAAMS,EAAAA,cAAoBb,EAAYK,IAAK,KAAMQ,EAAAA,cAAoBb,EAAYM,KAAM,KAAM,uKACr2B,CAKA,MAJA,SAAoBP,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGS,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWjB,EAAOc,EAAAA,cAAoBf,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCjBe,SAASkB,EAAiBlB,GACvC,OAAOc,EAAAA,cAAoBK,EAAAA,EAAenB,EAAOc,EAAAA,cAAoBM,EAAqBpB,GAC5F,CAHAmB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/server/infra/2025-04-12-infra-carbot.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"사이드 프로젝트를 진행하면서 빌드/배포를 담당했다\\n개발 서버(EC2)에 도커 컨테이너를 실행시키고 서브 도메인 등록해서 postman 으로 api 를 호출하는 것이 목표였다\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"NestJS 백엔드 앱을 Docker로 컨테이너화\\nEC2에 Docker 컨테이너를 실행\\nRoute53에서 도메인 (서브도메인) 등록 → EC2와 연결\\nEC2에 Nginx 설치 & 설정\\n도메인 요청을 Docker 컨테이너(NestJS 앱)로 프록시\\nCertbot으로 SSL 인증서 발급 → HTTPS 적용\\nPostman에서 https://서브도메인으로 API 테스트\\n\")), \"\\n\", React.createElement(_components.p, null, \"왜 HTTPS 인증서를 발급해야 해?\\n왜 그걸 Nginx에서 설정해야 해?\"), \"\\n\", React.createElement(_components.h1, null, \"1. HTTPS 인증서가 왜 필요할까?\"), \"\\n\", React.createElement(_components.p, null, \"요즘은 SSL 인증서 없는 사이트는 브라우저가 \\\"안전하지 않음\\\"이라고 경고\"), \"\\n\", React.createElement(_components.p, null, \"HTTPS의 핵심 = SSL 인증서\\nSSL 인증서는 이 웹사이트가 신뢰할 수 있는 사이트라는 걸 증명해주는 디지털 문서입니다.\\n→ 이 인증서가 있어야 브라우저가 자물쇠 🔒 띄우고 서버와 클라이언트 간의 통신을 암호화한다\"), \"\\n\", React.createElement(_components.h1, null, \"2. 그럼 왜 이걸 Nginx에서 처리할까?\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"클라이언트 (브라우저)\\n    ↓ HTTPS 요청\\nNginx (EC2 443 포트에서 대기)\\n    ↓ 암호화 해제 (SSL 인증서 사용)\\n    ↓ 요청 전달\\nNestJS 앱 (ex: localhost:3000)\\n\")), \"\\n\", React.createElement(_components.p, null, \"Nginx는 요청을 가장 먼저 받는 프록시로\\nSSL 인증서로 암호화된 요청은 NestJS(앱)가 직접 처리할 수 없음\\n앱는 암호화 해제된 요청만 처리해야 해서 Nginx가 중간에서 해석하고 처리해주는 것이에요.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"listen 443 ssl; → HTTPS 요청 받기\\nssl_certificate → 인증서 파일 경로\\nproxy_pass → 암호 해제된 요청을 Nest 앱으로 전달\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"인증서는 어떻게 만들까? Certbot으로 인증서 발급\\n가장 많이 쓰는 무료 인증서가 Let's Encrypt 인데\\ncertbot 이라는 툴로 발급함\\n\", React.createElement(_components.code, null, \"sudo certbot --nginx -d test-service.gwiyeom.org\")), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"HTTPS 인증서 발급 시 인증을 위해 nginx가 꼭 실행되야함 -> nginx에서 발급 작업도 함께 함\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"결론\"), \"\\n\", React.createElement(_components.p, null, \"Nginx\\t= 제일 먼저 요청 받아서 SSL 해석 후 앱에 전달\\ncertbot =\\tLet's Encrypt 인증서 자동 발급 툴\"), \"\\n\", React.createElement(_components.h3, null, \"TIP\"), \"\\n\", React.createElement(_components.p, null, \"HTTPS 인증서 = SSL 인증서 = TLS 인증서\\n웹사이트를 HTTPS로 암호화해서 안전하게 통신할 수 있게 해주는 인증서\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"SSL 인증서\\t✅ 옛날 이름\\tSecure Sockets Layer (구 버전 기술)\\nTLS 인증서\\t✅ 현재 기술 이름\\tTransport Layer Security (현 표준)\\nHTTPS 인증서\\t✅ 실무에서 부르는 방식\\tHTTPS 통신에 필요한 인증서 (SSL/TLS 포함)\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/infra/2025-04-12-infra-carbot.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","pre","code","ol","li","ul","h3","_provideComponents","components","React","start","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}