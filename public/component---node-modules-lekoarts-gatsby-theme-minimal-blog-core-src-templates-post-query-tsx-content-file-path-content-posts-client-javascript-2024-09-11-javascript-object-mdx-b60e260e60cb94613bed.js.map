{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-javascript-2024-09-11-javascript-object-mdx-b60e260e60cb94613bed.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,MAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,6DAA8D,KAAMO,EAAAA,cAAoBV,EAAYI,GAAI,KAAM,KAAMM,EAAAA,cAAoBV,EAAYK,GAAI,KAAM,WAAY,qBAAsB,KAAMK,EAAAA,cAAoBV,EAAYK,GAAI,KAAM,yDAA0D,KAAMK,EAAAA,cAAoBV,EAAYK,GAAI,KAAM,uEAAwE,MAAO,KAAMK,EAAAA,cAAoBV,EAAYM,IAAK,KAAMI,EAAAA,cAAoBV,EAAYO,KAAM,KAAM,+UAA4V,KAAMG,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,iCAAkC,KAAMO,EAAAA,cAAoBV,EAAYM,IAAK,KAAMI,EAAAA,cAAoBV,EAAYO,KAAM,KAAM,sDAC5mC,CAKA,MAJA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,MAAsBT,EAAMU,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWb,EAAOW,EAAAA,cAAoBZ,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCZe,SAASc,EAAiBd,GACvC,OAAOW,EAAAA,cAAoBI,EAAAA,EAAef,EAAOW,EAAAA,cAAoBK,EAAqBhB,GAC5F,CAHAe,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/client/javascript/2024-09-11-javascript-object.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"JavaScript의 객체(object) 를 사용하여 상수를 정의하고 이를 다시 다른 객체에 매핑합니다\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"객체는 중괄호 \", \"를 사용하여 키-값 쌍으로 정의\"), \"\\n\", React.createElement(_components.li, null, \"객체 프로퍼티 접근 ->객체의 속성은 점 표기법(.) 또는 대괄호 표기법([])을 사용하여 접근\"), \"\\n\", React.createElement(_components.li, null, \"객체를 사용한 매핑 ->TARGET_TYPE 객체는 키-값 쌍을 사용하여 다른 객체의 code 값을 name 값으로 매핑\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"export const TARGET_TYPE_A = {code:\\\"a\\\", name:\\\"aa\\\"};\\nexport const TARGET_TYPE_B = {code:\\\"b\\\", name:\\\"bb\\\"};\\nexport const TARGET_TYPE_C= {code:\\\"c\\\", name:\\\"cc\\\"};\\n\\nexport const TARGET_TYPE = {\\n  [TARGET_TYPE_A.code] : TARGET_TYPE_A.name,\\n  [TARGET_TYPE_B.code] : TARGET_TYPE_B.name,\\n  [TARGET_TYPE_C.code] : TARGET_TYPE_C.name\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"ex ) testType 이 a 인 경우 aa 렌더링\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"<Item label=\\\"타입\\\">{TARGET_TYPE[testType]}</Item>\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/gwiyeom/Documents/etc/gwiyeomgo.github.io/content/posts/client/javascript/2024-09-11-javascript-object.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","ul","li","pre","code","_provideComponents","components","React","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}