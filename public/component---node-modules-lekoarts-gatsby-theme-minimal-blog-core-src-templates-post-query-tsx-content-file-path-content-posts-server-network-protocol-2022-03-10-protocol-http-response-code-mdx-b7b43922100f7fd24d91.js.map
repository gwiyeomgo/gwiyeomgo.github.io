{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-network-protocol-2022-03-10-protocol-http-response-code-mdx-b7b43922100f7fd24d91.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/server/network/protocol/2022-03-10-protocol-http-responseCode.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    h3: \"h3\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"HTTP 상태 코드 정리\"), \"\\n\", React.createElement(_components.h2, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"HTTP 상태 코드는 웹 서버와 클라이언트 간의 통신 상태를 나타내는 표준 응답 코드\\r\\n이 코드는 클라이언트가 요청한 작업의 결과를 나타내며, 특정 오류 상황을 명확히 전달합니다.\"), \"\\n\", React.createElement(_components.h2, null, \"상태 코드별 정리\"), \"\\n\", React.createElement(_components.h3, null, \"클라이언트 오류 (4xx)\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"번호\"), React.createElement(_components.th, null, \"상태\"), React.createElement(_components.th, null, \"상황\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"400\"), React.createElement(_components.td, null, \"Bad Request\"), React.createElement(_components.td, null, \"물품 나눔 서비스에서 담당자가 잘못된 고유 번호로 결과 보고서 조회를 요청하면 서버는 유효성 검사를 통해 잘못된 요청 에러를 반환합니다. 즉, 잘못된 값이 전달되면 400 상태를 반환합니다.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"401\"), React.createElement(_components.td, null, \"Unauthorized\"), React.createElement(_components.td, null, \"사용자가 로그인에 실패할 경우 401 상태를 반환합니다. 예를 들어, 로그인 기능이 있는 화면에서 API 응답값이 401이면 자동 로그아웃이 트리거됩니다.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"403\"), React.createElement(_components.td, null, \"Forbidden\"), React.createElement(_components.td, null, \"사용자가 권한 없는 메뉴에 접근할 때 403 상태를 반환합니다. 예를 들어, 사용자는 현관문 번호키를 알아도 방마다 허락(인가)이 필요합니다. 권한이 없는 방에 접근하려 할 때 403 상태를 반환합니다.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"404\"), React.createElement(_components.td, null, \"Not Found\"), React.createElement(_components.td, null, \"물품 기부 서비스에서 기부 영수증 신청 화면에 기본 공제 영수증 정보가 없다면 404 상태를 반환해야 합니다. 또한, 자신이 기부하지 않은 기부건 정보를 조회하려 할 때도 404 상태를 반환합니다.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"409\"), React.createElement(_components.td, null, \"Conflict\"), React.createElement(_components.td, null, \"리소스의 현재 상태와 충돌이 발생할 때 사용됩니다. 예를 들어, 두 사용자가 동시에 동일한 데이터를 수정하려 할 때 발생합니다.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"410\"), React.createElement(_components.td, null, \"Gone\"), React.createElement(_components.td, null, \"요청한 리소스가 더 이상 서버에 존재하지 않음을 나타냅니다. 예를 들어, 예전에 존재했던 페이지가 삭제되었을 때 사용됩니다.\")))), \"\\n\", React.createElement(_components.h3, null, \"성공 (2xx)\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"번호\"), React.createElement(_components.th, null, \"상태\"), React.createElement(_components.th, null, \"상황\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"200\"), React.createElement(_components.td, null, \"OK\"), React.createElement(_components.td, null, \"요청이 성공적으로 처리되었습니다.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"201\"), React.createElement(_components.td, null, \"Created\"), React.createElement(_components.td, null, \"요청이 성공적으로 처리되었으며, 새로운 리소스가 생성되었습니다.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"202\"), React.createElement(_components.td, null, \"Accepted\"), React.createElement(_components.td, null, \"요청이 접수되었으나 아직 처리되지 않았습니다.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"203\"), React.createElement(_components.td, null, \"Non-Authoritative Information\"), React.createElement(_components.td, null, \"요청은 성공했으나, 원본 서버가 아닌 다른 소스에서 정보를 가져왔습니다.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"204\"), React.createElement(_components.td, null, \"No Content\"), React.createElement(_components.td, null, \"요청이 성공했으나, 반환할 콘텐츠가 없습니다.\")))), \"\\n\", React.createElement(_components.h3, null, \"에러 (5xx)\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"번호\"), React.createElement(_components.th, null, \"상태\"), React.createElement(_components.th, null, \"상황\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"503\"), React.createElement(_components.td, null, \"Service Unavailable\"), React.createElement(_components.td, null, \"서버가 일시적으로 요청을 처리할 수 없습니다. 예를 들어, DB가 잠긴 상태에서 API 요청이 있을 경우 503 상태를 반환합니다.\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"504\"), React.createElement(_components.td, null, \"Gateway Timeout\"), React.createElement(_components.td, null, \"서버가 게이트웨이 또는 프록시로부터 적절한 응답을 받지 못해 요청 시간이 초과되었습니다.\")))), \"\\n\", React.createElement(_components.h2, null, \"에러 알림 시스템 도입 시 고려사항\"), \"\\n\", React.createElement(_components.p, null, \"404 오류가 발생했을 때 데이터가 없는 상황을 오류로 간주해야 할지 고민 했었다.\\r\\n경우에 따라 200번대 메시지를 보내는 것이 더 적절할 수 있습니다.\\r\\n예를 들어, 요청은 성공했으나 제공할 내용이 없을 경우 204(No Content) 상태를 반환하는 것을 고려할 수 있습니다.\"), \"\\n\", React.createElement(_components.h2, null, \"출처\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://kanzler.tistory.com/44\"\n  }, \"HTTP 상태 코드 가이드\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/ko/docs/Web/HTTP/Status\"\n  }, \"MDN HTTP 상태 코드\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://dkswnkk.tistory.com/722\"\n  }, \"504\")), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/gwiyeom/Documents/etc/gwiyeomgo.github.io/content/posts/server/network/protocol/2022-03-10-protocol-http-responseCode.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","h2","p","h3","table","thead","tr","th","tbody","td","ul","li","a","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}