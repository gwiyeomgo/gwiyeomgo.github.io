{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-database-mysql-2024-07-04-mysql-json-data-null-search-mdx-cba3d5b2747c81e9a22f.js","mappings":"kNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,IAAK,MACLC,KAAM,OACNC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,0GAA2G,KAAMS,EAAAA,cAAoBZ,EAAYI,IAAK,KAAMQ,EAAAA,cAAoBZ,EAAYK,KAAM,KAAM,qDAAsD,KAAMO,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,iBAAkB,KAAMM,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,6CAA8C,KAAMS,EAAAA,cAAoBZ,EAAYI,IAAK,KAAMQ,EAAAA,cAAoBZ,EAAYK,KAAM,KAAM,mEAAoE,KAAMO,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,wBAAyB,KAAMM,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,sEAAuE,KAAMS,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,eAAgB,KAAMM,EAAAA,cAAoBZ,EAAYO,GAAI,KAAM,KAAMK,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,gCAAiC,MAAO,KAAMI,EAAAA,cAAoBZ,EAAYI,IAAK,KAAMQ,EAAAA,cAAoBZ,EAAYK,KAAM,KAAM,mEAAoE,KAAMO,EAAAA,cAAoBZ,EAAYO,GAAI,CACxuCM,MAAO,KACN,KAAMD,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,2DAA4D,MAAO,KAAMI,EAAAA,cAAoBZ,EAAYI,IAAK,KAAMQ,EAAAA,cAAoBZ,EAAYK,KAAM,KAAM,mEAAoE,KAAMO,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,MAAO,KAAMM,EAAAA,cAAoBZ,EAAYG,EAAG,KAAMS,EAAAA,cAAoBZ,EAAYS,EAAG,CAC9ZK,KAAM,gEACL,iEACL,CAKA,MAJA,SAAoBf,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWjB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UClBe,SAASkB,EAAiBlB,GACvC,OAAOa,EAAAA,cAAoBM,EAAAA,EAAenB,EAAOa,EAAAA,cAAoBO,EAAqBpB,GAC5F,CAHAmB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/server/database/mysql/2024-07-04-mysql-jsonData-null-search.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    h1: \"h1\",\n    ol: \"ol\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"확인 여부를 json 타입으로 db 컬럼 추가했다\\n실제로 몇건이나 확인 처리를 했는지 조회하는 과정에서\\nwhere 절에 is nll 이다 조건문이 동작하지 않아서 검색할 수 없었다\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"SELECT * FROM test\\nWHERE\\nconfirmed = 'null';\\n\")), \"\\n\", React.createElement(_components.h1, null, \"빈 JSON 객체 조회시\"), \"\\n\", React.createElement(_components.p, null, \"mysql 의 CAST 함수로 JSON 컬럼을 문자열로 변환 후 조회 가능\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"SELECT * FROM test\\nWHERE\\nCAST(confirmed AS CHAR) = 'null';\\n\")), \"\\n\", React.createElement(_components.h1, null, \"DEFAULT NULL 설정의 중요성\"), \"\\n\", React.createElement(_components.p, null, \"만약 confirmed 컬럼에 DEFAULT NULL 을 설정했다면\\nIS NULL 조건으로 쉽게 검색할 수 있습니다.\"), \"\\n\", React.createElement(_components.h1, null, \"해당 컬럼 처리 방법\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"confirmed 컬럼 DEFAULT NULL 설정\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"ALTER TABLE test\\nMODIFY COLUMN confirmed JSON DEFAULT NULL;\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"CAST(confirmed AS CHAR) = 'null' 인 경우 데이터를 실제 null 로 변경\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"UPDATE test\\nSET confirmed = NULL\\nWHERE confirmed = 'null';\\n\")), \"\\n\", React.createElement(_components.h1, null, \"참고\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://unluckyjung.github.io/db/2023/06/04/mysql-json-type/\"\n  }, \"https://unluckyjung.github.io/db/2023/06/04/mysql-json-type/\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/gwiyeom/Documents/etc/gwiyeomgo.github.io/content/posts/server/database/mysql/2024-07-04-mysql-jsonData-null-search.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","pre","code","h1","ol","li","a","_provideComponents","components","React","start","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}