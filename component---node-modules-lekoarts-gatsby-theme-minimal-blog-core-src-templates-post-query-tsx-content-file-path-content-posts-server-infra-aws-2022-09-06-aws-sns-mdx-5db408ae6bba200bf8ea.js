"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[1097],{839:function(e,l,t){t.r(l),t.d(l,{Head:function(){return u.p},default:function(){return m}});var n=t(6540),r=t(8453);function a(e){const l=Object.assign({p:"p",ul:"ul",li:"li",a:"a",h1:"h1",table:"table",thead:"thead",tr:"tr",th:"th",strong:"strong",tbody:"tbody",td:"td",ol:"ol",pre:"pre",code:"code"},(0,r.RP)(),e.components);return n.createElement(n.Fragment,null,n.createElement(l.p,null,"Amazon Simple Notification Service(Amazon SNS)"),"\n",n.createElement(l.ul,null,"\n",n.createElement(l.li,null,"주제 (topic) 생성"),"\n",n.createElement(l.li,null,"해당하는 모든 구독자에게 메시지를 푸시"),"\n"),"\n",n.createElement(l.p,null,n.createElement(l.a,{href:"https://docs.aws.amazon.com/sns/latest/dg/sns-vpc-tutorial.html"},"구현안내서")),"\n",n.createElement(l.h1,null,"배경"),"\n",n.createElement(l.p,null,"카카오 알림톡 장애로 기부를 못하는 상황이 발생했습니다\n당시 시니어 개발자는 장애가 발생되면 성장의 기회라고 말해주셨고\n이 상황을 해결하기 위해서 비동기 프로그래밍 회의를 진행했었습니다"),"\n",n.createElement(l.h1,null,"비동기 프로그래밍"),"\n",n.createElement(l.p,null,"비동기 프로그래밍은 여러 작업이 동시에 진행될 수 있도록 하여\n각 작업이 다른 작업의 완료를 기다리지 않고 독립적으로 실행될 수 있게 하는 방식"),"\n",n.createElement(l.h1,null,"SNS,SQS,KAFKA 중 어떤 기술을 쓸지 고민했었습니다"),"\n",n.createElement(l.table,null,n.createElement(l.thead,null,n.createElement(l.tr,null,n.createElement(l.th,null,n.createElement(l.strong,null,"특징")),n.createElement(l.th,null,n.createElement(l.strong,null,"Kafka")),n.createElement(l.th,null,n.createElement(l.strong,null,"SNS (Simple Notification Service)")),n.createElement(l.th,null,n.createElement(l.strong,null,"SQS (Simple Queue Service)")))),n.createElement(l.tbody,null,n.createElement(l.tr,null,n.createElement(l.td,null,n.createElement(l.strong,null,"유형")),n.createElement(l.td,null,"분산 스트리밍 플랫폼"),n.createElement(l.td,null,"Pub/Sub 알림 서비스"),n.createElement(l.td,null,"분산 메시지 큐")),n.createElement(l.tr,null,n.createElement(l.td,null,n.createElement(l.strong,null,"주요 용도")),n.createElement(l.td,null,"실시간 데이터 스트리밍, 이벤트 소싱"),n.createElement(l.td,null,"알림 시스템, 이벤트 기반 처리"),n.createElement(l.td,null,"비동기 메시지 큐, 작업 대기열 관리")),n.createElement(l.tr,null,n.createElement(l.td,null,n.createElement(l.strong,null,"메시지 저장")),n.createElement(l.td,null,"메시지 영구 저장 (디스크에 저장)"),n.createElement(l.td,null,"메시지 영구 저장되지 않음"),n.createElement(l.td,null,"메시지 저장 (최대 14일)")),n.createElement(l.tr,null,n.createElement(l.td,null,n.createElement(l.strong,null,"확장성")),n.createElement(l.td,null,"매우 높은 확장성, 분산 처리"),n.createElement(l.td,null,"높은 확장성, 자동 스케일링"),n.createElement(l.td,null,"높은 확장성, 자동 스케일링")),n.createElement(l.tr,null,n.createElement(l.td,null,n.createElement(l.strong,null,"메시지 순서")),n.createElement(l.td,null,"메시지 순서 보장 가능"),n.createElement(l.td,null,"순서 보장 없음"),n.createElement(l.td,null,"순서 보장 가능 (FIFO 큐 사용 시)")),n.createElement(l.tr,null,n.createElement(l.td,null,n.createElement(l.strong,null,"지속성")),n.createElement(l.td,null,n.createElement(l.strong,null,"강력한 지속성")," (디스크에 저장)"),n.createElement(l.td,null,n.createElement(l.strong,null,"없음")," (메시지 전송 후 사라짐)"),n.createElement(l.td,null,"메시지 지속성 있음")),n.createElement(l.tr,null,n.createElement(l.td,null,n.createElement(l.strong,null,"사용 용도")),n.createElement(l.td,null,"로그 수집, 스트리밍 데이터 처리, 이벤트 처리"),n.createElement(l.td,null,"실시간 알림, SMS/이메일/모바일 푸시 알림"),n.createElement(l.td,null,"분산 시스템에서 작업 큐 처리")),n.createElement(l.tr,null,n.createElement(l.td,null,n.createElement(l.strong,null,"속도")),n.createElement(l.td,null,"매우 빠르며 높은 처리량 지원"),n.createElement(l.td,null,"빠른 알림 전송, 지연 시간 짧음"),n.createElement(l.td,null,"상대적으로 느림 (동기/비동기 큐 처리)")),n.createElement(l.tr,null,n.createElement(l.td,null,n.createElement(l.strong,null,"구독 옵션")),n.createElement(l.td,null,"여러 소비자가 독립적으로 구독"),n.createElement(l.td,null,"다양한 프로토콜을 통한 구독 (HTTP, Lambda, SQS 등)"),n.createElement(l.td,null,"SQS나 Lambda로 메시지 전달 가능")),n.createElement(l.tr,null,n.createElement(l.td,null,n.createElement(l.strong,null,"복잡성")),n.createElement(l.td,null,"상대적으로 설정과 운영이 복잡"),n.createElement(l.td,null,"간단한 설정과 사용"),n.createElement(l.td,null,"상대적으로 간단한 설정과 사용")),n.createElement(l.tr,null,n.createElement(l.td,null,n.createElement(l.strong,null,"메시지 크기")),n.createElement(l.td,null,"큰 메시지 처리 가능 (메시지 크기 제한 없음)"),n.createElement(l.td,null,"최대 256KB"),n.createElement(l.td,null,"최대 256KB")))),"\n",n.createElement(l.p,null,"작은 규모 서비스이고 결국 메시지 지속성 있고 상대적으로 간단한 설정과 사용방법으로 SQS 를 선택했었다\n만약 SNS를 통해서 했더라면 어떨까?"),"\n",n.createElement(l.h1,null,"SNS+SQS 를 사용했다면!"),"\n",n.createElement(l.ol,null,"\n",n.createElement(l.li,null,"서비스에서 알림톡 발송을 위해 message+topic SNS 토픽에 메시지를 Publish"),"\n",n.createElement(l.li,null,"SNS는 해당 메시지를 연결된 SQS 큐(kakao-message-queue)에 Push하여 전달"),"\n",n.createElement(l.li,null,"메시징 시스템 서비스는 SQS 큐를 Polling하여 메시지를 수신하고, 인포뱅크 API를 호출해 알림톡을 발송합니다"),"\n"),"\n",n.createElement(l.pre,null,n.createElement(l.code,null,"[발신 서비스]\n↓ (Publish)\n[SNS Topic: kakao-message-topic]\n↓ (Push)\n[SQS Queue: kakao-message-queue]\n↓ (Receive)\n[카카오 메시지 시스템 서비스]\n↓ (HTTP)\n[인포뱅크 발송 API]\n")),"\n",n.createElement(l.h1,null,"SNS 만 사용했던 경험"),"\n",n.createElement(l.ol,null,"\n",n.createElement(l.li,null,"여러 서비스가 log-topic 으로 메시지를 Publish"),"\n",n.createElement(l.li,null,"Logging Service는 이 log-topic을 Subscribe구독"),"\n",n.createElement(l.li,null,"수신한 메시지를 DB에 저장"),"\n"),"\n",n.createElement(l.pre,null,n.createElement(l.code,null,"[Service A]    [Service B]\n    ↓ (Publish)     ↓ (Publish)\n[  log-topic (Pub/Sub Topic)   ]\n    ↓\n[ Logging Service ] (Subscriber)\n    ↓\n[ Database  ]\n\n")))}var c=function(e){void 0===e&&(e={});const{wrapper:l}=Object.assign({},(0,r.RP)(),e.components);return l?n.createElement(l,e,n.createElement(a,e)):a(e)},u=t(7292);function m(e){return n.createElement(u.A,e,n.createElement(c,e))}u.A}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-infra-aws-2022-09-06-aws-sns-mdx-5db408ae6bba200bf8ea.js.map