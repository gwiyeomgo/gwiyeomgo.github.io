{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-client-react-2021-09-29-react-life-cycle-mdx-67d9fb0606a5186160b5.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/client/react/2021-09-29-react-lifeCycle.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    pre: \"pre\",\n    code: \"code\",\n    ol: \"ol\",\n    strong: \"strong\",\n    em: \"em\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"class형태로 react코드를 프로그래밍 했었다.\\nlifeCycle을 통해서 원하는 시점에 특정 기능이 동작하도록 프로그래밍 할 수 있었다.\\nreact 코드에서 hooks를 사용하게 되면서 lifeCycle을 어떻게 쓸 수 있는지 궁금해 졌다.\\n지금부터는 lifeCycle에 관해서 알아보고 예제를 통해 hooks을 통해 구현해 보려고 한다.\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(_components.a, {\n    href: \"https://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/\"\n  }, \"Lifecycle methods\"), \" ?\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://en.wikipedia.org/wiki/React_(JavaScript_library)#Lifecycle_methods\"\n  }, \"Lifecycle methods\"), \" use a form of \", React.createElement(_components.a, {\n    href: \"https://en.wikipedia.org/wiki/Hooking\"\n  }, \"hooking\"), \" that allows the execution of code at set points during a component's lifetime.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"라이프사이클 메서드는 구성 요소의 수명 동안 설정된 지점에서 코드를 실행할 수 있는 후크 형식을 사용합니다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://react.vlpt.us/basic/25-lifecycle.html\"\n  }, \"컴포넌트가 브라우저상에 나타나고, 업데이트되고, 사라지게 될 때 호출되는 메서드들\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://react.vlpt.us/basic/24-class-component.html\"\n  }, \"클래스형 컴포넌트\"), \"에서만 사용\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"왜 사용?\"), \"\\n\", React.createElement(_components.p, null, \"프로그래밍을 하면서 특정 시점에 코드를 수행해야 할 때 사용할 수 있습니다.\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(_components.a, {\n    href: \"https://miro.medium.com/max/2000/1*rrl7MQc41h5ElkLmMTdSUA.jpeg\"\n  }, \"React 16.4 Life Cycle\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"life cycle은 업데이트 된다.\\nWhy need to update to new LifeCycle?\"), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, null, \"Mounting(생성)\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"These methods are called in the following order when an instance of a component is being created and inserted into the DOM:\\n\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, React.createElement(_components.a, {\n    href: \"https://reactjs.org/docs/react-component.html#constructor\"\n  }, \"constructor\"))), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"생성자 메서드,컴포넌트가 만들어지면 가장 먼저 실행\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"If you don’t initialize state and you don’t bind methods, you don’t need to implement a constructor for your React component.\"), \"\\n\", React.createElement(_components.li, null, \"You\", React.createElement(\"b\", null, \"should not call \", React.createElement(_components.code, null, \"setState()\"), \" in the \", React.createElement(_components.code, null, \"constructor()\"), \".Instead, if your component needs to use local state, \", React.createElement(\"b\", null, \"assign the initial state to \", React.createElement(_components.code, null, \"this.state\")), \" directly in the constructor:\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"render\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"데이터가 변경되어 새 화면을 그려야 할 때 자동으로 호출\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"함수형 컴포넌트는 render함수를 쓰지 않는다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"componentDidMount\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"componentDidMount() is invoked immediately after a component is mounted\\n\", React.createElement(_components.em, null, \"render 함수가 JSX를 화면에 그린 후 호출\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"getDerivedStateFromProps\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"props 로 받아온 state 에 값을 넣어주고 싶을 때 사용\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Updating :컴포넌트가 다시 렌더링 될 때 순차적으로 호출\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"An update can be caused by changes to props or state. These methods are called in the following order when a component is being re-rendered:\\n\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"render\")), \"\\n\", React.createElement(_components.h2, null, React.createElement(_components.a, {\n    href: \"https://reactjs.org/docs/react-component.html#render\"\n  }, \"render\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"render 함수는 오직 클레스 컴포넌트에서 요청된다\"), \"\\n\", React.createElement(_components.li, null, \"render 함수는 꺠끗하게 유지해야만 한다 그 의미는 그것은 수정하지 않는다 컴포넌트 상태를 ,그것은 반환한다 같은 결과를 그것이 호출되는 매시간 그리고 그것은 직접적으로 상호작용하지 않는다 브라우저에\"), \"\\n\", React.createElement(_components.li, null, \"만약 브라우저와 상호작용이 필요하다면 수행해라 당신의 작업을 \", React.createElement(_components.code, null, \"componentDidMount() \"), \" 나 다른 \", React.createElement(_components.code, null, \"lifecycle methods\"), \"를 대신에.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \" shouldComponentUpdate()\"), \" 이 \", React.createElement(_components.code, null, \"false\"), \"를 반환한다면 render()는 호출되지 않을 거다\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"componentDidUpdate\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"componentDidUpdate() is invoked immediately after updating occurs.\\n\", React.createElement(_components.em, null, \"리렌더링을 완료한 후 실행\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"getDerivedStateFromProps\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"shouldComponentUpdate(nextProps,nextState)\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"true나 false를 반환해 리렌더링을 결정\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.em, null, \"(기존 props,state값과 달라짐) props,state가 변경 되었을때\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.em, null, \"부모 컴포넌트가 렌더링 되었을때\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"getSnapshotBeforeUpdate\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"render에서 만들어진 결과가 브라우저에 실제로 반영되기 직전에 호출\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Unmounting\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"This method is called when a component is being removed from the DOM:\\n\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"componentWillUnmount\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"컴포넌트가 DOM에서 제거될 때 호출\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, null, \"리액트 Hooks를 활용하여 라이프 사이클을 구현?\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"componentDidMount,\")), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\"\n  }, \"useEffect(() => {\\n  console.log('componentDidMount ');\\n}, []);//empty array\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"componentDidUpdate\")), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\"\n  }, \"  const [count, setCount] = useState(0);\\n\\n  useEffect(() => {\\n    // 컴포넌트 업데이트 이후  실행\\n   console.log('componentDidUpdate');\\n\\t console.log(count);//업데이트 된 값\\n  }, [count]);\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"componentWillUnmount\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://velog.io/@delilah/React-5-Component-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%9D%98-%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0\"\n  }, \"출처\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://kyun2da.dev/react/%EB%A6%AC%EC%95%A1%ED%8A%B8-%EB%9D%BC%EC%9D%B4%ED%94%84%EC%82%AC%EC%9D%B4%ED%81%B4%EC%9D%98-%EC%9D%B4%ED%95%B4/\"\n  }, \"출처2\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://velog.io/@jeonghoheo/React-Hooks%EB%A6%AC%EC%95%A1%ED%8A%B8-%ED%9B%85%EC%8A%A4%EC%9D%98-%EA%B8%B0%EB%B3%B8-Part-1-2jjxpaobgg\"\n  }, \"출처3\")), \"\\n\", React.createElement(_components.h1, null, \"lifecycle method 생명주기 함수\"), \"\\n\", React.createElement(_components.p, null, \"출생(마운트)\\n컴포넌트의 constructor 생성자 실행 =>\\n생성자에서 state 를 정의하게 된다.\\n컴포넌트가 렌더링되며 이후에 componentDid Mount 함수 호출\"), \"\\n\", React.createElement(_components.p, null, \"다시 렌더링 = 업데이트 = props 가 변경되거나 setState 호출하여 state 변경,forceUpdate 강제 업데이트\\n렌더링 후에는 componentDidUpdate 호출\"), \"\\n\", React.createElement(_components.p, null, \"사망(언마운트)\\n상위 컴포넌트에서 현재 컴포넌트를 더 이상 화면에 표시하지 않게 될 때 언마운트된다\\n언마운트 직전에\\ncomponentWillUnmount 함수 호출\\n컴포넌트가 계속 존재하는 것이 아니라 시간의 흐름에 따라\\n생성되고 업데이트되다가 사라진다는 것\"), \"\\n\", React.createElement(_components.h1, null, \"state\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"직접 State를 수정하지 마세요\"), \"\\n\", React.createElement(_components.li, null, \"부모 -> 자식 으로 데이터는 아래로 흐릅니다 (단방향식)\"), \"\\n\", React.createElement(_components.li, null, \"컴포넌트는 자신의 state를 자식 컴포넌트에 props로 전달\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/client/react/2021-09-29-react-lifeCycle.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","a","blockquote","ul","li","hr","pre","code","ol","strong","em","h2","_provideComponents","components","React","href","className","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}