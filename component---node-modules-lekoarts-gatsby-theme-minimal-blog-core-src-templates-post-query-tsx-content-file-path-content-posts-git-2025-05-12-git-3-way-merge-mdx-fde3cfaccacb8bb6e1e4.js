"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[6270],{578:function(e,n,l){l.r(n),l.d(n,{Head:function(){return u.p},default:function(){return i}});var t=l(6540),r=l(8453);function c(e){const n=Object.assign({h1:"h1",p:"p",blockquote:"blockquote",ul:"ul",li:"li",pre:"pre",code:"code",a:"a"},(0,r.RP)(),e.components);return t.createElement(t.Fragment,null,t.createElement(n.h1,null,"배경"),"\n",t.createElement(n.p,null,"협업을 하다 보면 동료와 같은 파일을 동시에 수정하는 경우가 발생한다\n이때 동료의 수정 사항이 먼저 병합(merge)되면\n내가 작업하던 브랜치에서 최신 버전을 pull 했을 때 충돌(conflict)이 생길 수 있다\nGoland 에서는 이러한 상황에서 자동으로 세 개의 화면을 제공해 3-way merge 방식으로\n충돌을 시각적으로 비교하고 병합할 수 있도록 해줍니다\n이에 따라 정확한 Git의 3-way merge 개념을 정리하고 기록하려고 합니다"),"\n",t.createElement(n.h1,null,"3-way merge"),"\n",t.createElement(n.blockquote,null,"\n",t.createElement(n.p,null,"세 개의 커밋 (공통 조상, 내 커밋, 상대 브랜치 커밋)을 비교해서 병합하는 방식"),"\n"),"\n",t.createElement(n.ul,null,"\n",t.createElement(n.li,null,"이 방식은 충돌이 발생할 수 있다"),"\n",t.createElement(n.li,null,"충돌이 발생하면 수동으로 해결하고 새로운 병합 커밋을 생성"),"\n"),"\n",t.createElement(n.h1,null,"문제가 발생하는 경우"),"\n",t.createElement(n.pre,null,t.createElement(n.code,null,"A --- B --- C        ← origin/main (최신 main 브랜치)\n       \\\n        D           ← 로컬 #1 브랜치 (#1) 커밋\n")),"\n",t.createElement(n.p,null,"D 에서 작업을 완료후 pull로 최신 내용을 반영시 충돌 발생 가능"),"\n",t.createElement(n.pre,null,t.createElement(n.code,null,"A --- B --- C\n       \\     \\\n        D --- E       ← 로컬 #1 (병합 커밋) 생성 +  (origin/#1) 푸시\n")),"\n",t.createElement(n.p,null,"D 와 E 사이에 충돌 해결 후 새로운 병합 커밋 생성 후 원격 저장소에 업로드됨"),"\n",t.createElement(n.pre,null,t.createElement(n.code,null,"A --- B --- C -------------- H   ← origin/main\n       \\     \\              / (PR 병합됨)\n        D ---( E ← origin/#1 )\n")),"\n",t.createElement(n.p,null,"C와 E를 병합한 최종 머지 커밋"),"\n",t.createElement(n.h1,null,"'#1' 브랜치에 있는 상태에서 원격 main을 병합 (Goland가 하는 작업은 머지?)"),"\n",t.createElement(n.pre,null,t.createElement(n.code,null,"# 1. 로컬 #1 브랜치에 있는 상태에서\ngit checkout #1\n\n# 2. 원격 main 최신 내용 가져오기\ngit fetch origin\n\n# 3. feature에 origin/main을 병합\ngit merge origin/main\n\n# (충돌 시 해결하고)\ngit commit   # 충돌 없으면 자동 커밋됨\n")),"\n",t.createElement(n.h1,null,"참조"),"\n",t.createElement(n.p,null,t.createElement(n.a,{href:"https://wikidocs.net/153693"},"https://wikidocs.net/153693")))}var a=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.RP)(),e.components);return n?t.createElement(n,e,t.createElement(c,e)):c(e)},u=l(7292);function i(e){return t.createElement(u.A,e,t.createElement(a,e))}u.A}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-git-2025-05-12-git-3-way-merge-mdx-fde3cfaccacb8bb6e1e4.js.map