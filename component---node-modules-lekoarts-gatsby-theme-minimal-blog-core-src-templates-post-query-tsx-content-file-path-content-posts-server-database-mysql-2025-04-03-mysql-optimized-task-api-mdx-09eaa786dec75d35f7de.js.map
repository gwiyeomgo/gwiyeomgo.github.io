{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-database-mysql-2025-04-03-mysql-optimized-task-api-mdx-09eaa786dec75d35f7de.js","mappings":"kNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,WAAY,aACZC,GAAI,KACJC,KAAM,SACLC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,MAAO,KAAMS,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,0DAA2D,KAAMQ,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,MAAO,KAAMS,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,KAAMO,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,KAAMM,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,oDAAqD,MAAO,KAAMQ,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,KAAMM,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,qHAAsH,MAAO,KAAMQ,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,KAAMM,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,oEAAqE,MAAO,MAAO,KAAMQ,EAAAA,cAAoBZ,EAAYO,WAAY,KAAM,KAAMK,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,gGAAiG,MAAO,KAAMQ,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,KAAMI,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,6JAA8JM,EAAAA,cAAoBZ,EAAYS,KAAM,KAAM,oBAAqB,4CAA6CG,EAAAA,cAAoBZ,EAAYS,KAAM,KAAM,oBAAqB,sGAAuG,MAAO,KAAMG,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,SAAU,KAAMS,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,KAAMO,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,sEAAuE,KAAMM,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,0JAA2J,MACp/D,CAKA,MAJA,SAAoBP,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOc,QAASC,GAAab,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWf,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCde,SAASgB,EAAiBhB,GACvC,OAAOa,EAAAA,cAAoBI,EAAAA,EAAejB,EAAOa,EAAAA,cAAoBK,EAAqBlB,GAC5F,CAHAiB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/server/database/mysql/2025-04-03-mysql-optimized-taskAPI.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"5초 이상 속도 지연되면 알림이 온다\\n자주 오는 알림중 업무 목록 API 속도를 개선하려고 한다\"), \"\\n\", React.createElement(_components.h1, null, \"분석\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"로그를 통해 쿼리를 확인하니\\nWHERE 절 out_id  IN 조건 값이 너무 많았다\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"EXPLAIN 실행하니 인덱스는 2개 있지만\\ncollects 테이블에서 type ALL 으로 전체 스캔 하고 있으며 rows 92563건으로 많다\\nUsing where 로 WHERE 조건으로 필터링중\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"EXPLAIN ANALYZE 실행\\nFilter 조건이 많고  실행 시간 오래 걸리는 가장 핵심적인 병목 구간 존재\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Table scan on collects  (cost=15236 rows=92568) (actual time=2.04..4482 rows=112417 loops=1)\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"실제로 4.4초 이상 소요됨\\n| 표현                | 의미                            | 단위     |\\n|---------------------|----------------------------------|----------|\\n| \", React.createElement(_components.code, null, \"actual time=2.04\"), \"  | 첫 결과 row까지 걸린 시간        | 밀리초   |\\n| \", React.createElement(_components.code, null, \"actual time=4482\"), \"  | 모든 row 처리 완료까지 걸린 시간 | 밀리초   |\\n| 차이 = 4480ms       | 총 소요 시간 (≈ 4.4초)            | 초로 환산 가능 |\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"개선 부분\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"donation_collects 테이블의 WHERE 조건들이 인덱스를 타도록 설계\\n특히 basecamp_give_id\"), \"\\n\", React.createElement(_components.li, null, \"IN (  ...) 은 JOIN으로 변경? CTE(공통 테이블 식)로 JOIN?\\nIN (...)에 값이 너무 많으면 옵티마이저가 인덱스를 제대로 활용하지 못한데..??\\nWITH 키워드 사용해 basecamp_give_id 배열 테이블 만들고 조인해서 쿼리 비교 예정\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/database/mysql/2025-04-03-mysql-optimized-taskAPI.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","ol","li","blockquote","ul","code","_provideComponents","components","React","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}