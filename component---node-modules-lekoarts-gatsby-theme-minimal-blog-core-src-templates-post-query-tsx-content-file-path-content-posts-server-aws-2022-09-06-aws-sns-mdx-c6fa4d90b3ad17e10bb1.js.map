{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-aws-2022-09-06-aws-sns-mdx-c6fa4d90b3ad17e10bb1.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/server/aws/2022-09-06-aws-sns.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h1: \"h1\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    strong: \"strong\",\n    tbody: \"tbody\",\n    td: \"td\",\n    ol: \"ol\",\n    pre: \"pre\",\n    code: \"code\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Amazon Simple Notification Service(Amazon SNS)\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"주제 (topic) 생성\"), \"\\n\", React.createElement(_components.li, null, \"해당하는 모든 구독자에게 메시지를 푸시\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://docs.aws.amazon.com/sns/latest/dg/sns-vpc-tutorial.html\"\n  }, \"구현안내서\")), \"\\n\", React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"카카오 알림톡 장애로 기부를 못하는 상황이 발생했습니다\\n당시 시니어 개발자는 장애가 발생되면 성장의 기회라고 말해주셨고\\n이 상황을 해결하기 위해서 비동기 프로그래밍 회의를 진행했었습니다\"), \"\\n\", React.createElement(_components.h1, null, \"비동기 프로그래밍\"), \"\\n\", React.createElement(_components.p, null, \"비동기 프로그래밍은 여러 작업이 동시에 진행될 수 있도록 하여\\n각 작업이 다른 작업의 완료를 기다리지 않고 독립적으로 실행될 수 있게 하는 방식\"), \"\\n\", React.createElement(_components.h1, null, \"SNS,SQS,KAFKA 중 어떤 기술을 쓸지 고민했었습니다\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, React.createElement(_components.strong, null, \"특징\")), React.createElement(_components.th, null, React.createElement(_components.strong, null, \"Kafka\")), React.createElement(_components.th, null, React.createElement(_components.strong, null, \"SNS (Simple Notification Service)\")), React.createElement(_components.th, null, React.createElement(_components.strong, null, \"SQS (Simple Queue Service)\")))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"유형\")), React.createElement(_components.td, null, \"분산 스트리밍 플랫폼\"), React.createElement(_components.td, null, \"Pub/Sub 알림 서비스\"), React.createElement(_components.td, null, \"분산 메시지 큐\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"주요 용도\")), React.createElement(_components.td, null, \"실시간 데이터 스트리밍, 이벤트 소싱\"), React.createElement(_components.td, null, \"알림 시스템, 이벤트 기반 처리\"), React.createElement(_components.td, null, \"비동기 메시지 큐, 작업 대기열 관리\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"메시지 저장\")), React.createElement(_components.td, null, \"메시지 영구 저장 (디스크에 저장)\"), React.createElement(_components.td, null, \"메시지 영구 저장되지 않음\"), React.createElement(_components.td, null, \"메시지 저장 (최대 14일)\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"확장성\")), React.createElement(_components.td, null, \"매우 높은 확장성, 분산 처리\"), React.createElement(_components.td, null, \"높은 확장성, 자동 스케일링\"), React.createElement(_components.td, null, \"높은 확장성, 자동 스케일링\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"메시지 순서\")), React.createElement(_components.td, null, \"메시지 순서 보장 가능\"), React.createElement(_components.td, null, \"순서 보장 없음\"), React.createElement(_components.td, null, \"순서 보장 가능 (FIFO 큐 사용 시)\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"지속성\")), React.createElement(_components.td, null, React.createElement(_components.strong, null, \"강력한 지속성\"), \" (디스크에 저장)\"), React.createElement(_components.td, null, React.createElement(_components.strong, null, \"없음\"), \" (메시지 전송 후 사라짐)\"), React.createElement(_components.td, null, \"메시지 지속성 있음\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"사용 용도\")), React.createElement(_components.td, null, \"로그 수집, 스트리밍 데이터 처리, 이벤트 처리\"), React.createElement(_components.td, null, \"실시간 알림, SMS/이메일/모바일 푸시 알림\"), React.createElement(_components.td, null, \"분산 시스템에서 작업 큐 처리\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"속도\")), React.createElement(_components.td, null, \"매우 빠르며 높은 처리량 지원\"), React.createElement(_components.td, null, \"빠른 알림 전송, 지연 시간 짧음\"), React.createElement(_components.td, null, \"상대적으로 느림 (동기/비동기 큐 처리)\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"구독 옵션\")), React.createElement(_components.td, null, \"여러 소비자가 독립적으로 구독\"), React.createElement(_components.td, null, \"다양한 프로토콜을 통한 구독 (HTTP, Lambda, SQS 등)\"), React.createElement(_components.td, null, \"SQS나 Lambda로 메시지 전달 가능\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"복잡성\")), React.createElement(_components.td, null, \"상대적으로 설정과 운영이 복잡\"), React.createElement(_components.td, null, \"간단한 설정과 사용\"), React.createElement(_components.td, null, \"상대적으로 간단한 설정과 사용\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.strong, null, \"메시지 크기\")), React.createElement(_components.td, null, \"큰 메시지 처리 가능 (메시지 크기 제한 없음)\"), React.createElement(_components.td, null, \"최대 256KB\"), React.createElement(_components.td, null, \"최대 256KB\")))), \"\\n\", React.createElement(_components.p, null, \"작은 규모 서비스이고 결국 메시지 지속성 있고 상대적으로 간단한 설정과 사용방법으로 SQS 를 선택했었다\\n만약 SNS를 통해서 했더라면 어떨까?\"), \"\\n\", React.createElement(_components.h1, null, \"SNS+SQS 를 사용했다면!\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"서비스에서 알림톡 발송을 위해 message+topic SNS 토픽에 메시지를 Publish\"), \"\\n\", React.createElement(_components.li, null, \"SNS는 해당 메시지를 연결된 SQS 큐(kakao-message-queue)에 Push하여 전달\"), \"\\n\", React.createElement(_components.li, null, \"메시징 시스템 서비스는 SQS 큐를 Polling하여 메시지를 수신하고, 인포뱅크 API를 호출해 알림톡을 발송합니다\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"[발신 서비스]\\n↓ (Publish)\\n[SNS Topic: kakao-message-topic]\\n↓ (Push)\\n[SQS Queue: kakao-message-queue]\\n↓ (Receive)\\n[카카오 메시지 시스템 서비스]\\n↓ (HTTP)\\n[인포뱅크 발송 API]\\n\")), \"\\n\", React.createElement(_components.h1, null, \"SNS 만 사용했던 경험\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"여러 서비스가 log-topic 으로 메시지를 Publish\"), \"\\n\", React.createElement(_components.li, null, \"Logging Service는 이 log-topic을 Subscribe구독\"), \"\\n\", React.createElement(_components.li, null, \"수신한 메시지를 DB에 저장\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"[Service A]    [Service B]\\n    ↓ (Publish)     ↓ (Publish)\\n[  log-topic (Pub/Sub Topic)   ]\\n    ↓\\n[ Logging Service ] (Subscriber)\\n    ↓\\n[ Database  ]\\n\\n\")), \"\\n\", React.createElement(_components.h1, null, \"실사용\"), \"\\n\", React.createElement(_components.p, null, \"AWS SNS 를 이용해 여러 서비스에서 TOPIC 과 메세지를 보내면\\n로깅 서비스에서 TOPIC 을 구독하고 있다가 새로 메세지를 읽고 staging DB 에 저장하고 있었습니다\"), \"\\n\", React.createElement(_components.p, null, \"생각보다 많은 데이터로 부하가 발생해  데이터 베이스 따로 관리중..\\ndb에 로그를 넣으면 보기는 service_id로 api 추척도 가능하고 좋지만..\"), \"\\n\", React.createElement(_components.p, null, \"장점\\nDB에 들어가 있으면 서비스 ID나 키를 기준으로 빠르게 추적 가능 (트러블슈팅 편리)\\n조회나 분석이 간편함 (쿼리 편의성)\"), \"\\n\", React.createElement(_components.p, null, \"단점\\nDB 부하가 높아지면 서비스 성능에 악영향\\n데이터량이 많을 경우 스토리지 비용 증가\\n로그성 데이터의 특성상 빈번한 Write로 인해 DB 성능 저하(로그 데이터는 쓰기가 매우 빈번 → 관계형 DB에는 비적합)\\n-> 결국 데이터베이스 분리 관리중..\\n로깅이 잘못된 오류로 급격하게 많아지자 sns 실패 등 발생\\n(로그 폭주 시 DB 성능이 저하 → SNS 메시지 처리 지연 및 실패 발생)\"), \"\\n\", React.createElement(_components.h1, null, \"DB에 넣는게 맞을까? 다른 방법도 있을까?\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"실시간은 아니어도 짧은 시간 이내(수 초~수 분)에 추적\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"SNS → SQS (큐) → 로깅 서비스 → staging DB\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"순간적 부하를 SQS로 흡수 가능\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"관계형 DB가 아니라 대규모 쓰기 처리에 강한 스토리지에 로그를 저장\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"실시간 SNS → SQS 또는 Kinesis Data Stream → Logstash 또는 Fluentd → Elasticsearch → Kibana\\nSNS → 로깅 서비스 → DynamoDB 또는 MongoDB\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"비용 및 부하를 최대한 절감하는 것이 목표라면 → 파일 기반 저장 + 배치 처리\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"SNS → 로깅 서비스 → S3 (또는 EFS) → 배치 잡 → staging DB\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/aws/2022-09-06-aws-sns.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","ul","li","a","h1","table","thead","tr","th","strong","tbody","td","ol","pre","code","blockquote","_provideComponents","components","React","href","start","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}