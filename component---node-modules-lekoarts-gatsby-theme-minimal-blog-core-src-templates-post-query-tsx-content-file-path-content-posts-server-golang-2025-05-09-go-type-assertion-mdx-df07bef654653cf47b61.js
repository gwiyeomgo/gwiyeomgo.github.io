"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[4935],{2568:function(e,n,t){t.r(n),t.d(n,{Head:function(){return o.p},default:function(){return u}});var l=t(6540),r=t(8453);function c(e){const n=Object.assign({h1:"h1",p:"p",code:"code",pre:"pre"},(0,r.RP)(),e.components);return l.createElement(l.Fragment,null,l.createElement(n.h1,null,"배경"),"\n",l.createElement(n.p,null,"go 버전을 1.19에서 1.24로 업그레이드한 이후\n",l.createElement(n.code,null,"row map[string]interface{} "),"형태로 값을 사용할 때 타입을 명확히 지정하지 않았고\nrow 안의 특정 필드의 값을 ",l.createElement(n.code,null,"value.([]byte)")," 와 같이 타입 단언을 시도한 코드에서 문제가 발생했습니다"),"\n",l.createElement(n.p,null,"Go 1.24에서는 타입을 더 엄격하게 검사하기 때문에 ok 값이 false로 반환되어 오류가 발생 했습니다"),"\n",l.createElement(n.p,null,"해당 문제는 타입을 ",l.createElement(n.code,null,"map[string]interface{}")," 이 아닌 타입을 명확히 하기 위해\n명확한 타입 선언이 가능한 struct 를 사용해 파싱 해서 해결했다"),"\n",l.createElement(n.p,null,"type assertion 에 대해서 정리해본다"),"\n",l.createElement(n.h1,null,"type assertion (타입 단언)"),"\n",l.createElement(n.p,null,l.createElement(n.code,null,"value.([]byte)"),"같은 표현을 타입 단언`\n값 안에 어떤 구체 타입이 들어있는지 검사하고 그 타입으로 꺼낸다"),"\n",l.createElement(n.h1,null,"tip"),"\n",l.createElement(n.p,null,"type conversion (형변환)\n",l.createElement(n.code,null,"var f float64 = float64(i)")),"\n",l.createElement(n.h1,null,"문제가 상황 다시 보기"),"\n",l.createElement(n.p,null,"row 에서 찾은 id 값은 실제 int64 인데 []byte 로 타입 단언시 실패한다"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,'var row = make(map[string]interface{})\nrow["id"] = int64(12345)  // int64 값\nvalue, ok := row["id"]\nb, ok := value.([]byte)\nfmt.Println("b:", b)  // nil\nfmt.Println("ok:", ok) // false\n')),"\n",l.createElement(n.h1,null,"왜 1.19에서 “안 터졌는가” ?"),"\n",l.createElement(n.p,null,"실제 위 예제를 각 버전에서 해봣을때\n동작에는 차이가 없었다 다른 원이이 있을텐데.."),"\n",l.createElement(n.p,null,"go.mod 파일을 보니\n",l.createElement(n.code,null,"github.com/go-sql-driver/mysql v1.6.0")," 에서\n",l.createElement(n.code,null,"github.com/go-sql-driver/mysql v1.9.2")," 로 같이 업그레이드 되었다"),"\n",l.createElement(n.p,null,"go-sql-driver/mysql는 DB에서 Select한 값을 Go 쪽으로 반환할 때\n각 컬럼 타입을 Go 타입으로 매핑하기 때문에 버전이 업그레이드 되면서 더 정확한 타입을 반환하여 문제 발생"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,'v1.6.0: INT 컬럼 결과 → []byte("12345")로 반환\nv1.9.2: INT 컬럼 결과 → int64(12345)로 반환\n')))}var a=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.RP)(),e.components);return n?l.createElement(n,e,l.createElement(c,e)):c(e)},o=t(7292);function u(e){return l.createElement(o.A,e,l.createElement(a,e))}o.A}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-golang-2025-05-09-go-type-assertion-mdx-df07bef654653cf47b61.js.map