{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-database-mysql-2025-04-02-mysql-db-load-mdx-d2ea9148f2088b645349.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/server/database/mysql/2025-04-02-mysql-DBLoad.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    h3: \"h3\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    code: \"code\",\n    blockquote: \"blockquote\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"db 부하가 발생해 그라파나 CPU 사용률이 60% 이상 발생했다\\nDB부하는 단지 query 속도보다 지속적인 WriteIOP 횟수와 연관이 있다는 피드백을 받갔고\\nreplication/synchronization등과도 관련있을 수도 있다고 한다\\n용어를 잘 모르니 정리해보자\"), \"\\n\", React.createElement(_components.h2, null, \"DB 부하란?\"), \"\\n\", React.createElement(_components.p, null, \"1.CPU 사용률, 메모리 사용량\\n2.디스크 I/O (특히 Write IOPS)\\n3.락/경합\\n4.네트워크 대역폭\\n연결 수 및 커넥션 풀 상태\"), \"\\n\", React.createElement(_components.p, null, \"replication/sync 지연\"), \"\\n\", React.createElement(_components.h3, null, \"MySQL에서 쿼리를 날렸을 때 replication/Synchronization 발생\"), \"\\n\", React.createElement(_components.p, null, \"우리가 쿼리 하나 날리면\\n그게 복제(replication)를 통해 다른 서버로 전달되고\\n이 서버들이 같은 상태를 유지하려는 게 동기화(synchronization)\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"상황\"), React.createElement(_components.th, null, \"관련 개념\"), React.createElement(_components.th, null, \"설명\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"쿼리를 Primary에 작성\"), React.createElement(_components.td, null, \"(우리가 하는 일)\"), React.createElement(_components.td, null, React.createElement(_components.code, null, \"INSERT\"), \", \", React.createElement(_components.code, null, \"UPDATE\"), \" 등 쿼리 실행\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"binlog에 기록\"), React.createElement(_components.td, null, \"Replication 준비\"), React.createElement(_components.td, null, \"복제를 위한 로그 기록\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"Replica가 binlog 읽음\"), React.createElement(_components.td, null, \"Replication\"), React.createElement(_components.td, null, \"쿼리를 복사해 실행\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"Replica가 최신 상태로 유지됨\"), React.createElement(_components.td, null, \"Synchronization\"), React.createElement(_components.td, null, \"데이터가 모두 같게 유지됨\")))), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Replica를 직접 건드리지 않지만 우리가 작성한 쿼리가 복제를 통해 전달되면서도 부하를 발생시킨다?\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"mysql 에서 db 상황을 보고 어떻게 진단하지?\"), \"\\n\", React.createElement(_components.h2, null, \"실무에서 알면 유용한 MySQL 명령어 정리\"), \"\\n\", React.createElement(_components.h3, null, \"세션 및 커넥션 관련\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"명령어\"), React.createElement(_components.th, null, \"설명\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SHOW PROCESSLIST;\"), React.createElement(_components.td, null, \"현재 접속된 세션과 상태 확인\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SHOW FULL PROCESSLIST;\"), React.createElement(_components.td, null, \"실행 중인 쿼리 전체 내용까지 확인\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SELECT * FROM information_schema.processlist;\"), React.createElement(_components.td, null, React.createElement(_components.code, null, \"SHOW PROCESSLIST\"), \"의 SQL 버전, 필터링/정렬 가능\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SHOW STATUS LIKE 'Threads_connected';\"), React.createElement(_components.td, null, \"현재 접속 중인 커넥션 수\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SHOW STATUS LIKE 'Threads_running';\"), React.createElement(_components.td, null, \"현재 실행 중인 쿼리 수\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SHOW STATUS LIKE 'Connections';\"), React.createElement(_components.td, null, \"MySQL 시작 후 총 접속 시도 수\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SHOW VARIABLES LIKE 'max_connections';\"), React.createElement(_components.td, null, \"최대 허용 커넥션 수\")))), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h3, null, \"Sleep/Idle 세션 분석\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"명령어\"), React.createElement(_components.th, null, \"설명\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SELECT id, user, host, db, command, time FROM information_schema.processlist WHERE command = 'Sleep' ORDER BY time DESC LIMIT 10;\"), React.createElement(_components.td, null, \"오래된 Sleep 커넥션 확인\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SHOW VARIABLES LIKE '%timeout%';\"), React.createElement(_components.td, null, \"커넥션 유지 관련 timeout 설정 확인 (\", React.createElement(_components.code, null, \"wait_timeout\"), \", \", React.createElement(_components.code, null, \"interactive_timeout\"), \" 등)\")))), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h3, null, \"쿼리/슬로우쿼리 분석\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"명령어\"), React.createElement(_components.th, null, \"설명\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SHOW VARIABLES LIKE 'slow_query_log%';\"), React.createElement(_components.td, null, \"슬로우 쿼리 로그 설정 확인\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SHOW GLOBAL STATUS LIKE 'Slow_queries';\"), React.createElement(_components.td, null, \"슬로우 쿼리 발생 수 확인\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SET profiling = 1;\"), React.createElement(_components.td, null, \"쿼리 프로파일링 활성화\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SHOW PROFILE;\"), React.createElement(_components.td, null, \"가장 최근 쿼리의 리소스 소비 단계별 분석\")))), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h3, null, \"락 / 트랜잭션 분석\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"명령어\"), React.createElement(_components.th, null, \"설명\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SHOW ENGINE INNODB STATUS\"), React.createElement(_components.td, null, \"락/트랜잭션 상세 정보 (InnoDB 전용)\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SELECT * FROM information_schema.innodb_trx;\"), React.createElement(_components.td, null, \"현재 실행 중인 트랜잭션 조회\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SELECT * FROM information_schema.innodb_locks;\"), React.createElement(_components.td, null, \"현재 활성화된 락 조회\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SELECT * FROM information_schema.innodb_lock_waits;\"), React.createElement(_components.td, null, \"락 대기 관계 조회\")))), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h3, null, \"복제(Replication) 상태 진단\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"명령어\"), React.createElement(_components.th, null, \"설명\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SHOW SLAVE STATUS\"), React.createElement(_components.td, null, \"슬레이브(Replica) 복제 상태 확인\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SHOW MASTER STATUS;\"), React.createElement(_components.td, null, \"마스터의 binlog 위치 등 복제 정보 확인\")))), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h3, null, \"서버 상태/통계\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"명령어\"), React.createElement(_components.th, null, \"설명\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SHOW STATUS LIKE 'Uptime';\"), React.createElement(_components.td, null, \"MySQL 서버의 가동 시간 확인\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SHOW STATUS LIKE 'Handler%';\"), React.createElement(_components.td, null, \"테이블 핸들러 상태 (테이블 액세스 방식 확인)\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SHOW STATUS LIKE 'Threads%';\"), React.createElement(_components.td, null, \"커넥션/스레드 관련 상태 전반 확인\")))), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h3, null, \"설정/환경 확인\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"명령어\"), React.createElement(_components.th, null, \"설명\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SHOW VARIABLES LIKE '%timeout%';\"), React.createElement(_components.td, null, \"타임아웃 관련 설정 확인\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SHOW VARIABLES LIKE 'max_connections';\"), React.createElement(_components.td, null, \"최대 접속 수 설정 확인\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"SHOW VARIABLES LIKE 'innodb%';\"), React.createElement(_components.td, null, \"InnoDB 관련 설정 확인\")))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/database/mysql/2025-04-02-mysql-DBLoad.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","h2","h3","table","thead","tr","th","tbody","td","code","blockquote","hr","_provideComponents","components","React","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}