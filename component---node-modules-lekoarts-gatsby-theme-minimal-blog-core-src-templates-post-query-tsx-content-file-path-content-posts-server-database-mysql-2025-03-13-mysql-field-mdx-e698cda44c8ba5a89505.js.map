{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-database-mysql-2025-03-13-mysql-field-mdx-e698cda44c8ba5a89505.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,KAAM,OACNC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBb,EAAMc,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBd,EAAYG,GAAI,KAAM,MAAO,KAAMW,EAAAA,cAAoBd,EAAYI,EAAG,KAAM,4FAA6F,KAAMU,EAAAA,cAAoBd,EAAYG,GAAI,KAAM,MAAO,KAAMW,EAAAA,cAAoBd,EAAYK,IAAK,KAAMS,EAAAA,cAAoBd,EAAYM,KAAM,KAAM,0qBAA2qB,KAAMQ,EAAAA,cAAoBd,EAAYK,IAAK,KAAMS,EAAAA,cAAoBd,EAAYM,KAAM,KAAM,kMAAmM,KAAMQ,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,yBAA0B,KAAMO,EAAAA,cAAoBd,EAAYI,EAAG,KAAM,2DAA4D,KAAMU,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,KAAMM,EAAAA,cAAoBd,EAAYS,GAAI,KAAM,4EAA6E,MAAO,KAAMK,EAAAA,cAAoBd,EAAYG,GAAI,KAAM,QAAS,KAAMW,EAAAA,cAAoBd,EAAYK,IAAK,KAAMS,EAAAA,cAAoBd,EAAYM,KAAM,KAAM,qKAAsK,KAAMQ,EAAAA,cAAoBd,EAAYI,EAAG,KAAM,oCAAqC,KAAMU,EAAAA,cAAoBd,EAAYU,GAAI,KAAM,4BAA6B,KAAMI,EAAAA,cAAoBd,EAAYW,GAAI,CAC3rEI,MAAO,KACN,KAAMD,EAAAA,cAAoBd,EAAYS,GAAI,KAAM,6BAA8B,KAAMK,EAAAA,cAAoBd,EAAYS,GAAI,KAAM,0BAA2B,KAAMK,EAAAA,cAAoBd,EAAYS,GAAI,KAAM,+EAAgF,MAAO,KAAMK,EAAAA,cAAoBd,EAAYK,IAAK,KAAMS,EAAAA,cAAoBd,EAAYM,KAAM,KAAM,sTAClY,CAKA,MAJA,SAAoBP,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOiB,QAASC,GAAahB,OAAOC,OAAO,CAAC,GAAGU,EAAAA,EAAAA,MAAsBb,EAAMc,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWlB,EAAOe,EAAAA,cAAoBhB,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UClBe,SAASmB,EAAiBnB,GACvC,OAAOe,EAAAA,cAAoBK,EAAAA,EAAepB,EAAOe,EAAAA,cAAoBM,EAAqBrB,GAC5F,CAHAoB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/server/database/mysql/2025-03-13-mysql-field.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"2024년 12월부터 2025년 2월까지 월별 OO 신청건 조회 업무를할때\\ncase 월별 신청건 조회함 이때 순서를 강제하기 위해 mysql field 사용\"), \"\\n\", React.createElement(_components.h1, null, \"쿼리\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"SELECT\\n    CASE\\n        WHEN JSON_UNQUOTE(JSON_EXTRACT(d.created, '$.datetime')) LIKE '2024-12%' THEN '2024 12월'\\n        WHEN JSON_UNQUOTE(JSON_EXTRACT(d.created, '$.datetime')) LIKE '2025-01%' THEN '2025 1월'\\n        WHEN JSON_UNQUOTE(JSON_EXTRACT(d.created, '$.datetime')) LIKE '2025-02%' THEN '2025 2월'\\n    END AS month,\\n    COUNT(*) AS count\\nFROM test_table d\\nWHERE\\n  JSON_UNQUOTE(JSON_EXTRACT(d.created, '$.datetime')) LIKE '2024-12%'\\n    OR JSON_UNQUOTE(JSON_EXTRACT(d.created, '$.datetime')) LIKE '2025-01%'\\n    OR JSON_UNQUOTE(JSON_EXTRACT(d.created, '$.datetime')) LIKE '2025-02%'\\nGROUP BY month\\nORDER BY FIELD(month, '2024 12월', '2025 1월', '2025 2월');\\n\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"SELECT\\nno,\\ncase field\\n        when 'A' then 'a'\\n        when 'B' then 'b'\\n        when 'C' then 'c'\\n    end as '분야'\\nFROM data\\nwhere no in\\n(1,2,3,4)\\nORDER BY FIELD(no,\\n1,2,3,4);\\n\")), \"\\n\", React.createElement(_components.h2, null, \"ORDER BY FIELD 사용 이유?\"), \"\\n\", React.createElement(_components.p, null, \"일반적인 ORDER BY month ASC의 동작 방식\\n월별 정렬을 원하는 순서대로 강제하기 위해\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"(참고) 날짜가 JSON 필드(created)에 저장되어 있어 JSON_EXTRACT를 사용하여 특정 연월 데이터를 조회해야 했음\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"검증방법\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"SELECT *\\nFROM donations d\\nINNER JOIN donation_collects c ON d.id = c.donation_id\\nWHERE JSON_UNQUOTE(JSON_EXTRACT(d.created, '$.datetime')) LIKE '2024-12%';\\n\")), \"\\n\", React.createElement(_components.p, null, \"2024년 12월 데이터가 20건 이하로 한번에 확인 가능\"), \"\\n\", React.createElement(_components.h3, null, \"만약 숫자가 컸다면 어떻게 검증해야 했을까?\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"0\"\n  }, \"\\n\", React.createElement(_components.li, null, \"COUNT() 사용해서 12월 건 수 를 확인\"), \"\\n\", React.createElement(_components.li, null, \"LIMIT를 사용해서 일부 데이터를 확인\"), \"\\n\", React.createElement(_components.li, null, \"최대/최소 값 조회해서 처음과 끝 날짜 데이터를 확인\\n특정 날짜 범위 내에서 가장 빠른 데이터 또는 가장 늦은 데이터를 찾아보는 방법\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"SELECT MIN(JSON_UNQUOTE(JSON_EXTRACT(d.created, '$.datetime'))) AS min_date,\\n       MAX(JSON_UNQUOTE(JSON_EXTRACT(d.created, '$.datetime'))) AS max_date\\nFROM donations d\\nINNER JOIN donation_collects c ON d.id = c.donation_id\\nWHERE JSON_UNQUOTE(JSON_EXTRACT(d.created, '$.datetime')) LIKE '2024-12%';\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/database/mysql/2025-03-13-mysql-field.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","pre","code","h2","ul","li","h3","ol","_provideComponents","components","React","start","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}