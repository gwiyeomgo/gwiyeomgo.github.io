{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-golang-2025-04-09-go-encoding-mdx-6db229360f87df24e682.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,IAAK,QACJC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,MAAO,KAAMM,EAAAA,cAAoBT,EAAYI,EAAG,KAAMK,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,0BAA6B,kFAAmF,KAAMI,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,oJAAqJ,KAAMK,EAAAA,cAAoBT,EAAYM,IAAK,KAAMG,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,oKAA6K,KAAMI,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,OAAQ,KAAMM,EAAAA,cAAoBT,EAAYM,IAAK,KAAMG,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,6JACl5B,CAKA,MAJA,SAAoBN,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWZ,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCXe,SAASa,EAAiBb,GACvC,OAAOU,EAAAA,cAAoBI,EAAAA,EAAed,EAAOU,EAAAA,cAAoBK,EAAqBf,GAC5F,CAHAc,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/server/golang/2025-04-09-go-encoding.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"url.QueryEscape(\\\"데이터\\\")\"), \"를 사용하여\\n한글이나 특수문자가 포함된 문자열을 URL에 안전하게 포함시키는 방식으로 인코딩을 해왔습니다\\n최근 사용한 방식은 아래와 같다\"), \"\\n\", React.createElement(_components.p, null, \"명확한 책임 분리와 정확한 인코딩/디코딩 처리를 위해 새로운 프로젝트에 적용 예정이다\\nnet/url 패키지의 url.Values 타입이나 url.URL 구조체를 활용하면\\nRFC 3986에 맞는 포맷으로 정확하게 인코딩할 수 있어서 신뢰성 있는 결과를 제공\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"params := url.Values{}\\nparams.Add(\\\"name\\\", \\\"홍길동\\\") //직관적으로 조립\\nparams.Add(\\\"age\\\", \\\"30\\\")\\n\\nfinal := params.Encode()\\n// name=%ED%99%8D%EA%B8%B8%EB%8F%99&age=30\\n\")), \"\\n\", React.createElement(_components.h1, null, \"디코딩\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"u, _ := url.Parse(\\\"https://example.com/search?name=%ED%99%8D%EA%B8%B8%EB%8F%99&age=30\\\")\\nparams := u.Query()\\n\\nfmt.Println(params.Get(\\\"name\\\")) // 홍길동\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/golang/2025-04-09-go-encoding.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","code","pre","_provideComponents","components","React","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}