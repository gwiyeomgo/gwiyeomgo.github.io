"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[1351],{4118:function(e,n,t){t.r(n),t.d(n,{Head:function(){return c.p},default:function(){return i}});var l=t(6540),r=t(8453);function a(e){const n=Object.assign({h1:"h1",p:"p",ol:"ol",li:"li",ul:"ul",code:"code",pre:"pre"},(0,r.RP)(),e.components);return l.createElement(l.Fragment,null,l.createElement(n.h1,null,"배경"),"\n",l.createElement(n.p,null,"지금 운영되는 시스템은 AWS ECR 에 APP 이미지를 빌드하고\n쿠버네틱스 환경에서 실행시킨다\n코드가 있는 gitLab 에서 코드를 클론 받고\n도커로 빌드하고\nECR 이미지를 추가하려고 한다\n작업 도구는 Jenkins를 사용한다"),"\n",l.createElement(n.h1,null,"1. Jenkins로  ECR 이미지로 빌드 파이프라인 작성"),"\n",l.createElement(n.p,null,"젠킨스 CI/CD (지속적 통합/배포)를 위해\n자동화 파이프라인을 반복적이고 신뢰성 있게 실행해주는 도구"),"\n",l.createElement(n.ol,null,"\n",l.createElement(n.li,null,"AWS ECR에서 리포지토리를 만들기\nECR에서 a-service 레포지토리 UI로 생성 되어 있어야함"),"\n"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"ECR 전체 레포지토리 URL 형식\n",l.createElement(n.code,null,"<account_id>.dkr.ecr.<region>.amazonaws.com/<repository-name>")),"\n"),"\n",l.createElement(n.ol,{start:"2"},"\n",l.createElement(n.li,null,"잡에 item 새로 생성하고 파이프라인을 작성한다"),"\n"),"\n",l.createElement(n.p,null,"젠킨스에서 job 에 newItem 추가 후 pipeline 추가"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"pipeline {\n    agent any\n    stages {\n        stage('Checkout') { //GitLab에서 원하는 브랜치로 코드 clone\n            steps {\n                git branch: \"${params.BRANCH}\",\n                credentialsId: 'u',\n                url: 'git@gitlab.org:test/a-service.git'\n            }\n        }\n        stage('Build image') {  //Docker로 이미지 빌드 (태그 붙여서)\n            steps {\n                script {\n                    app = docker.build(\"12345678910.dkr.ecr.ap-northeast-2.amazonaws.com/test-a-service:R-${params.TAG}\")\n                }\n            }\n        }\n\n        stage('Push image') { //AWS ECR에 이미지 push (docker login + push 자동 처리)\n            steps {\n            \tscript {\n                    docker.withRegistry('https://12345678910.dkr.ecr.ap-northeast-2.amazonaws.com/test-a-service', 'ecr:ap-northeast-2:AWS Beanstalk Deploy') {\n               app.push(\"R-${params.TAG}\")\n                \t}\n            \t}\n            }\n        }\n\n        stage('Deploy') { //원하는 배포 방식으로 서비스 배포 (kubectl apply, helm upgrade 등 가능)\n            steps {\n            \tscript {\n            \t   ....\n            \t}\n            }\n        }\n    }\n}\n")),"\n",l.createElement(n.ol,{start:"3"},"\n",l.createElement(n.li,null,"\n",l.createElement(n.p,null,"gitLab 접속을 위한 설정 필요\ngitLab code 를 받아서 빌드시켜 이미지를 만들어야 하기 때문에\nGitLab SSH key 등록됨 (Deploy Key or User SSH Key)\n",l.createElement(n.code,null,"You're using 'Known hosts file' strategy to verify ssh host keys, but your known_hosts file does not exist"),'\nGitLab 쪽 해당 저장소에는 Jenkins의 SSH 공개키가 등록되어 있지 않아서 "접근 권한 없음"\nGitLab 접속 해당 저장소 → Settings > Repository → Deploy Keys'),"\n"),"\n",l.createElement(n.li,null,"\n",l.createElement(n.p,null,"Jenkins Credentials 에 gitlab-ssh-key 등록"),"\n"),"\n"),"\n",l.createElement(n.p,null,"개발 서버의 jenkins 도커 인스턴스 안에 생성된 id_rsa키 등록"),"\n",l.createElement(n.ol,{start:"5"},"\n",l.createElement(n.li,null,"배포할 브랜치에 Dockerfile 포함되어 있어야함"),"\n"),"\n",l.createElement(n.p,null,"stage('Deploy') 수행하여\n개발서버의 Kubernetes 클러스터에서 Pod가 실행 중"),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"[ Git (GitLab) ]\n        │\n        ↓  [Jenkins 'Clone' 단계: git clone]\n[ Jenkins / CI 서버 ]\n        │\n        ↓  [Jenkins 'Build image': docker build]\n[ Docker 이미지 생성 ]\n        │\n        ↓  [Jenkins 'Push image': docker push]\n[ AWS ECR 저장소 ]\n        │\n        ↓  [Jenkins 'Deploy': 배포 명령 실행]\n[ 쿠버네티스 개발 클러스터 ]\n")),"\n",l.createElement(n.pre,null,l.createElement(n.code,null,"[ EC2 (내 컴퓨터 역할) ]\n    └─ Jenkins\n    └─ git clone (from GitLab)\n    └─ docker build\n    └─ docker push → [ECR]\n    └─ kubectl apply → [EKS]\n\n[ECR (이미지 저장소)] ← Jenkins Push\n        ↑\n        │\n[EKS (Kubernetes)] ← 이미지 Pull\n└─ Pod 실행 (컨테이너 기반)\n")))}var s=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.RP)(),e.components);return n?l.createElement(n,e,l.createElement(a,e)):a(e)},c=t(7292);function i(e){return l.createElement(c.A,e,l.createElement(s,e))}c.A}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-aws-2025-05-22-aws-ecr-mdx-f6ec7186089833e7a19a.js.map