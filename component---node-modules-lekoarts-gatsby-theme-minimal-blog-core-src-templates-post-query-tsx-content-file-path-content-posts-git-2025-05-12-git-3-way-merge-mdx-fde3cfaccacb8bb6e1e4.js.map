{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-git-2025-05-12-git-3-way-merge-mdx-fde3cfaccacb8bb6e1e4.js","mappings":"kNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,WAAY,aACZC,GAAI,KACJC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,EAAG,MACFC,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,MAAO,KAAMU,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,oQAAqQ,KAAMS,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,eAAgB,KAAMU,EAAAA,cAAoBb,EAAYK,WAAY,KAAM,KAAMQ,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,kDAAmD,MAAO,KAAMS,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,KAAMO,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,sBAAuB,KAAMM,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,oCAAqC,MAAO,KAAMM,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,eAAgB,KAAMU,EAAAA,cAAoBb,EAAYQ,IAAK,KAAMK,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,2GAA4G,KAAMI,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,0CAA2C,KAAMS,EAAAA,cAAoBb,EAAYQ,IAAK,KAAMK,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,kGAAmG,KAAMI,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,iDAAkD,KAAMS,EAAAA,cAAoBb,EAAYQ,IAAK,KAAMK,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,+HAAgI,KAAMI,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,sBAAuB,KAAMS,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,sDAAuD,KAAMU,EAAAA,cAAoBb,EAAYQ,IAAK,KAAMK,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,mMAAoM,KAAMI,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,MAAO,KAAMU,EAAAA,cAAoBb,EAAYI,EAAG,KAAMS,EAAAA,cAAoBb,EAAYU,EAAG,CAChwEI,KAAM,+BACL,gCACL,CAKA,MAJA,SAAoBf,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGS,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWjB,EAAOc,EAAAA,cAAoBf,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCjBe,SAASkB,EAAiBlB,GACvC,OAAOc,EAAAA,cAAoBK,EAAAA,EAAenB,EAAOc,EAAAA,cAAoBM,EAAqBpB,GAC5F,CAHAmB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/git/2025-05-12-git-3-way-merge.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"협업을 하다 보면 동료와 같은 파일을 동시에 수정하는 경우가 발생한다\\n이때 동료의 수정 사항이 먼저 병합(merge)되면\\n내가 작업하던 브랜치에서 최신 버전을 pull 했을 때 충돌(conflict)이 생길 수 있다\\nGoland 에서는 이러한 상황에서 자동으로 세 개의 화면을 제공해 3-way merge 방식으로\\n충돌을 시각적으로 비교하고 병합할 수 있도록 해줍니다\\n이에 따라 정확한 Git의 3-way merge 개념을 정리하고 기록하려고 합니다\"), \"\\n\", React.createElement(_components.h1, null, \"3-way merge\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"세 개의 커밋 (공통 조상, 내 커밋, 상대 브랜치 커밋)을 비교해서 병합하는 방식\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"이 방식은 충돌이 발생할 수 있다\"), \"\\n\", React.createElement(_components.li, null, \"충돌이 발생하면 수동으로 해결하고 새로운 병합 커밋을 생성\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"문제가 발생하는 경우\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"A --- B --- C        ← origin/main (최신 main 브랜치)\\n       \\\\\\n        D           ← 로컬 #1 브랜치 (#1) 커밋\\n\")), \"\\n\", React.createElement(_components.p, null, \"D 에서 작업을 완료후 pull로 최신 내용을 반영시 충돌 발생 가능\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"A --- B --- C\\n       \\\\     \\\\\\n        D --- E       ← 로컬 #1 (병합 커밋) 생성 +  (origin/#1) 푸시\\n\")), \"\\n\", React.createElement(_components.p, null, \"D 와 E 사이에 충돌 해결 후 새로운 병합 커밋 생성 후 원격 저장소에 업로드됨\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"A --- B --- C -------------- H   ← origin/main\\n       \\\\     \\\\              / (PR 병합됨)\\n        D ---( E ← origin/#1 )\\n\")), \"\\n\", React.createElement(_components.p, null, \"C와 E를 병합한 최종 머지 커밋\"), \"\\n\", React.createElement(_components.h1, null, \"'#1' 브랜치에 있는 상태에서 원격 main을 병합 (Goland가 하는 작업은 머지?)\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"# 1. 로컬 #1 브랜치에 있는 상태에서\\ngit checkout #1\\n\\n# 2. 원격 main 최신 내용 가져오기\\ngit fetch origin\\n\\n# 3. feature에 origin/main을 병합\\ngit merge origin/main\\n\\n# (충돌 시 해결하고)\\ngit commit   # 충돌 없으면 자동 커밋됨\\n\")), \"\\n\", React.createElement(_components.h1, null, \"참조\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://wikidocs.net/153693\"\n  }, \"https://wikidocs.net/153693\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/git/2025-05-12-git-3-way-merge.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","blockquote","ul","li","pre","code","a","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}