{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-etc-2025-04-28-etc-mcp-mdx-a8a14040363251c4fd83.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,EAAG,MACFC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,GAAI,KAAM,MAAO,KAAMK,EAAAA,cAAoBR,EAAYI,EAAG,KAAM,qKAAsK,KAAMI,EAAAA,cAAoBR,EAAYG,GAAI,KAAM,MAAO,KAAMK,EAAAA,cAAoBR,EAAYI,EAAG,KAAMI,EAAAA,cAAoBR,EAAYK,EAAG,CAC9bI,KAAM,kDACL,mDACL,CAKA,MAJA,SAAoBV,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWZ,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCZe,SAASa,EAAiBb,GACvC,OAAOS,EAAAA,cAAoBK,EAAAA,EAAed,EAAOS,EAAAA,cAAoBM,EAAqBf,GAC5F,CAHAc,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/etc/2025-04-28-etc-mcp.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"AI/Observability 관련 신기술 MCP(Model Context Protocol)\\nModel Context Protocol(MCP)은\\nLLM(Large Language Model) 애플리케이션과\\n외부 데이터 소스 및 도구들 간의 원활한 통합을 가능하게 하는 개방형 프로토콜\"), \"\\n\", React.createElement(_components.h1, null, \"링크\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://yozm.wishket.com/magazine/detail/3041/\"\n  }, \"https://yozm.wishket.com/magazine/detail/3041/\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/etc/2025-04-28-etc-mcp.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","a","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}