{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-infra-2025-05-22-infra-kubernetes-helm-chart-mdx-7fdf4ec1fa8755c176b9.js","mappings":"kNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,KAAM,OACNC,WAAY,aACZC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,MAAO,KAAMS,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,wGAAyG,KAAMQ,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,iGAAkG,KAAMM,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,gBAAiB,KAAMQ,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,qBAAsB,KAAMS,EAAAA,cAAoBZ,EAAYO,WAAY,KAAM,KAAMK,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,oBAAqB,MAAO,KAAMQ,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,0FAA6F,KAAMQ,EAAAA,cAAoBZ,EAAYO,WAAY,KAAM,KAAMK,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,oDAAqD,MAAO,KAAMQ,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,oFAAqF,KAAMQ,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,SAAUQ,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,mCAAoC,sBAAuB,KAAMM,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,8OAA+O,KAAMM,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,gCAAiC,KAAMS,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,cAAe,KAAMS,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,KAAMI,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,0CAA2C,MAAO,KAAMG,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,YAAa,KAAMS,EAAAA,cAAoBZ,EAAYK,IAAK,KAAMO,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,gQAAiQ,KAAMM,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,iDAAkD,KAAMQ,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,KAAMI,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,OAAQG,EAAAA,cAAoBZ,EAAYM,KAAM,KAAM,YAAa,sBAAuB,KAAMM,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,+CAAgD,KAAMG,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,gDAAiD,KAAMG,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,gEAAiE,MAAO,KAAMG,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,kBAAmB,KAAMS,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,uGACp+F,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOc,QAASC,GAAab,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWf,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCde,SAASgB,EAAiBhB,GACvC,OAAOa,EAAAA,cAAoBI,EAAAA,EAAejB,EAAOa,EAAAA,cAAoBK,EAAqBlB,GAC5F,CAHAiB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/server/infra/2025-05-22-infra-kubernetes-helm-chart.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"개발서버에서 젠킨스를 활용해\\nECR 이미지를 빌드 후 배포 했지만 컨테이너가 실행 되지 않았다\\n담당자님께 확인해보니\\n새로운 앱이 적용되면 helm 설정을 변경해야 한다고 한다\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"개발서버 로그인 후\\n ~/k8s/helm 가서 templates\\n  templates에 새로운 app에 대한 file 생성 및 기타 파일 업로드 해야해요 ..\\n\")), \"\\n\", React.createElement(_components.p, null, \"왜?어떻게 바꾸는거지?\"), \"\\n\", React.createElement(_components.h1, null, \"일단.. 용어부터 이해해보자..\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Helm이란? -> 배달앱..\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Kubernetes에서 앱을 쉽고 안정적으로 배포할 수 있게 해주는 도구\\nKubernetes의 \\\"패키지 매니저\\\" (apt, yum, brew 같은 역할)\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Helm Chart란? -> 왜 피자 세트?? ->여러 리소스를 세트로 묶어서 설치해줌\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Helm이 사용하는 앱 설치용 패키지 묶음\\n여러 개의 Kubernetes YAML 파일 + 설정값(template)으로 구성된 앱 배포 템플릿\"), \"\\n\", React.createElement(_components.p, null, \"로컬에서\\n\", React.createElement(_components.code, null, \"helm pull bitnami/mysql --untar\"), \" 실행시  mysql 폴더 생겼고\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"mysql/\\n├── Chart.yaml # 이 Helm Chart의 기본 정보 (이름, 버전, 설명 등)\\n├── values.yaml  # 이 Helm Chart에 넘길 수 있는 기본 설정값들\\n├── templates/  # 실제 쿠버네티스 리소스 템플릿들이 들어 있음\\n│   ├── deployment.yaml\\n│   ├── service.yaml\\n│   ├── pvc.yaml\\n│   └── ...\\n\")), \"\\n\", React.createElement(_components.h1, null, \"그럼 내가 생성한 앱 컨테이너에도 추가할 수 있나?\"), \"\\n\", React.createElement(_components.h1, null, \"이미지 태그 바꾸기\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Helm Chart에서 명시적으로 관리해야 함 -> 이미지 태그 관리\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"작업 진행해보니\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"work/k8s/helm-test/\\n    Chart.yaml\\n    values.yaml\\n    myApp.yaml -> 이 서비스는 이번 배포에 포함할지 말지 제어 (사람이 직접 추가)\\n    templates/\\n        ├── a_service\\n        ├── b_service\\n        │        └──   deployment.yaml hpa.yaml service.yaml\\n        └── ...\\n\")), \"\\n\", React.createElement(_components.p, null, \"templates 안에 new_service.yaml 을 작성 - 새로운 앱 추가\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"tip \", React.createElement(_components.code, null, \"replicas\"), \" 동일한 Pod 몇개 실행할지..\"), \"\\n\", React.createElement(_components.li, null, \"tip deployment.yaml : 앱 실행(Pod)을 관리하는 핵심 설정\"), \"\\n\", React.createElement(_components.li, null, \"tip service.yaml:외부/내부에서 Pod에 접근 설정,앱 접속 라우팅\"), \"\\n\", React.createElement(_components.li, null, \"tip hpa.yaml:CPU 사용률, 메모리 사용률 등을 기준으로 Pod 수를 자동으로 조절하는 설정 파일\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"이걸 수동으로 쓰는건가..\"), \"\\n\", React.createElement(_components.p, null, \"직접 Helm values 파일을 수정하고 배포까지만 해보겠지만..\\nTerraform을 쓰면 그 설정과 배포 과정을 전부 코드로 선언해서\\n버전 관리 , 자동화  까지 가능??\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/infra/2025-05-22-infra-kubernetes-helm-chart.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","pre","code","blockquote","ul","li","_provideComponents","components","React","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}