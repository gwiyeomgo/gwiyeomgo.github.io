{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-aws-2021-12-28-aws-lambda-mdx-08c6be2454ead6305006.js","mappings":"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","sources":["webpack://gwiyeom-blog/./content/posts/server/aws/2021-12-28-aws-lambda.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ul: \"ul\",\n    li: \"li\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    h4: \"h4\",\n    ol: \"ol\",\n    pre: \"pre\",\n    h1: \"h1\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"사용배경\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"(2021/12/28)\"), \"\\n1.\", React.createElement(_components.code, null, \" 2021년 기부 데이터의 상태는 2022년 1월 1일 새벽 1시 기준 평가완료 상태로 변경해야 한다.(예약작업걸기 - '평가완료' 상태로 변경(2022.01.01 01:00:00)\"), \"\\n2. 1/1일 주말이고 새벽이어서 개발자가 직접 변경할 수 없는 상황이다.\\n3. 예약을 걸어서 자동으로 변경되도록 하자\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"(2022/11/08)\"), \"\\n4 . 11/8 일 매장을 구독한 구독자에게 매장소식 알림 메세지를 발송하는 기능을 추가\\n5. lambda 를 사용해서 매일 오후 6시 매장별 구독자에게 메세지를 전송\\n6. lamda 에서 전송 api 를 호출한다\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"어떻게 데이터의 상태를 자동으로 변경시키죠?\\nLambda 로 api 를 호출해서 상태를 변경합니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://docs.aws.amazon.com/ko_kr/lambda/latest/dg/welcome.html\"\n  }, \"AWS Lambda 란 무엇입니까?\"), \"\\nLambda는 필요 시에만 함수를 실행\\n사용한 컴퓨팅 시간만큼만 비용을 지불하고, 코드가 실행되지 않을 때는 요금이 부과되지 않습니다.\\n\", React.createElement(_components.a, {\n    href: \"https://docs.aws.amazon.com/ko_kr/lambda/latest/dg/gettingstarted-concepts.html#gettingstarted-concepts-function\"\n  }, \"https://docs.aws.amazon.com/ko_kr/lambda/latest/dg/gettingstarted-concepts.html#gettingstarted-concepts-function\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, null, \"설정내용\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"AWS Lambda  에서 함수를 생성한다\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"Lambda >함수 > 함수 생성\")), \"\\n\", React.createElement(_components.li, null, \"함수 이름 설정,나머지는 기본 설정\"), \"\\n\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"api 를 호출하는 코드로 변경\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"const axios = require('axios');\\n\\nexports.handler = async (event) => {\\n    let env = event.env;\\n    let url = process.env.URL\\n    let token =  process.env.Bearer\\n    let path = '/api/test';\\n\\n     const options = {\\n        withCredentials: true,\\n        headers: {\\n          Authorization: 'Bearer ' + token,\\n          Accept: 'application/json',\\n          'Content-type': 'application/x-www-form-urlencoded',\\n        },\\n    };\\n\\n    try {\\n       const res = await axios.get(url+path, options);\\n        return {\\n            statusCode: 200,\\n            body: env + ': ' + 'successful'\\n        };\\n    } catch (e) {\\n        return {\\n            statusCode: 400,\\n            body: env + ': ' + JSON.stringify(e)\\n        };\\n    }\\n};\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"구성에서 pdv 환경변수 설정\\n\", React.createElement(_components.code, null, \"  env :\\\"prod\\\"  url :\\\"\\\"  등등..\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"api 호출에 axios 를 사용,axios 를 사용하기 위해서 계층추가\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"    > Runtime.ImportModuleError: Error: Cannot find module 'axios'\\n    에러 발생시 ARN 지정\\n    https://ljmocic.medium.com/publish-simple-node-js-aws-lambda-layer-a87c00afdd83\\n\\n    > (질문) 특정시간에 l/a 함수가 발동하도록 어떻게 설정하지? (답) Lambda 에 트리거를 추가\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"5\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Lambda 에서 트리거 추가+ 규칙 추가\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"lamba -> (트리거를 추가) -> 규칙 추가 or 기존 규칙도 사용\"), \"\\n\", React.createElement(_components.li, null, \"기존 규칙도 사용 ->  규칙 를 조회할 수 있는 역할등 없다면 관리자에게 요청\"), \"\\n\", React.createElement(_components.li, null, \"규칙 추가\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"eventBridge > 규칙\"), \" 에 cron 으로 지정해준다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \" [규칙을 생성] 예약 표현식 => cron 으로 표시\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"규칙에 대상에 트리거 동작시 사용할 구성 환경변수 값을 json 으로 지정한다\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"구성> 환경변수에 값 입력 -> Amazon EventBridge >규칙 선택> 상단에 편집>대상선택>(추가 설정)대상 입력 구성>json텍스트로 상수 입력 ex) {\\\"env\\\":\\\"prod\\\"}\")), \"\\n\", React.createElement(_components.li, null, \"Cron Expression  : Cron, 크론은 본래 유닉스 계열의 운영체제에서 시간 기반으로 잡 스케쥴링을 하는 후면 프로세스의 명칭이다.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"cron(00 00 * * ? *) 매일 오전 9시에 실행\\ncron(30 00 * * ? *) 매일 오전 9시 30분 실행\\ncron(00 01 * * ? *) 매일 오전 10시에 실행\\ncron(00 02 * * ? *) 매일 오전 11시에 실행\\ncron(00 03 * * ? *) 매일 낮 12시에 실행\\ncron(00 04 * * ? *) 매일 오후 1시에 실행\\ncron(00 05 * * ? *) 매일 오후 2시에 실행\\ncron(00 06 * * ? *) 매일 오후 3시에 실행\\ncron(00 07 * * ? *) 매일 오후 4시에 실행\\ncron(00 08 * * ? *) 매일 오후 5시에 실행\\ncron(00 09 * * ? *) 매일 오후 6시에 실행\\n\\ncron(00 18 * * ? *) 매일 새벽 3시\\n\\ncron(00 16 31 12 ? *)  1년에 한번 1월 1일 새벽 1시 00분 ?\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"`(질문) 실행 결과는 어디서 보지??\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"(답) aws CloudWatch 모니터링 로그를 볼 수 있다`\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"6.aws CloudWatch 에서 로그를 본다\\nCloudWatch Logs 에 테스트,실제 트리거 결과를 볼 수 있다.\"), \"\\n\", React.createElement(_components.h1, null, \"20230612\"), \"\\n\", React.createElement(_components.p, null, \"aws lambda 를 설정했는데\\n\", React.createElement(_components.code, null, \"Task timed out after 3.01 seconds\"), \" 에러가 발생해서 이후 동작하지 않았다\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"람다함수 > 일반구성> 제한 시간 을 편집했다 (3초 => 15분)\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"20240311\"), \"\\n\", React.createElement(_components.p, null, \"aws lambda 를 설정 후 기존 규칙을 사용했다\\n트리거를 람다에 추가하고\\n이벤트 트리거로 가서 선택한 규칙을 편집해 대상 입력 상수를 추가했다\\n문제는 운영,staging 환경에서 오전 10시 에 설정한 lamda 를 서정하고 싶었다\\n찾아보니 이벤트 트리거로 가서 선택한 규칙에서 대상을 추가하고 상수를 추가하면 된다고 한다\\n설정을 완료했고 테스트..\"), \"\\n\", React.createElement(_components.h3, null, \"참고\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-create-rule-schedule.html\"\n  }, \"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-create-rule-schedule.html\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://dev-bri.tistory.com/4\"\n  }, \"https://dev-bri.tistory.com/4\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://naengguk.tistory.com/128\"\n  }, \"https://naengguk.tistory.com/128\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://jisblee.me/board/view/0/2/169\"\n  }, \"https://jisblee.me/board/view/0/2/169\"), \"\\n\", React.createElement(_components.a, {\n    href: \"https://www.leafcats.com/94\"\n  }, \"https://www.leafcats.com/94\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/aws/2021-12-28-aws-lambda.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","ul","li","p","code","a","h4","ol","pre","h1","h3","_provideComponents","components","React","href","start","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}