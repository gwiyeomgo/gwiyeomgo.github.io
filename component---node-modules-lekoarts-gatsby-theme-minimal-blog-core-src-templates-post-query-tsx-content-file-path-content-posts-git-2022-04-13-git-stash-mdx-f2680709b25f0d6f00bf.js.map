{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-git-2022-04-13-git-stash-mdx-f2680709b25f0d6f00bf.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,KAAM,OACNC,GAAI,OACHC,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,qBAAsB,KAAMU,EAAAA,cAAoBb,EAAYI,GAAI,KAAM,KAAMS,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,uCAAwC,KAAMQ,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,uEAAwE,MAAO,KAAMQ,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,yBAA0B,KAAMO,EAAAA,cAAoBb,EAAYO,EAAG,KAAMM,EAAAA,cAAoBb,EAAYQ,EAAG,CAClhBM,KAAM,oFACL,uEAAwE,KAAMD,EAAAA,cAAoBb,EAAYO,EAAG,KAAMM,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,aAAc,sCAAuC,KAAMI,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,aAAc,KAAMU,EAAAA,cAAoBb,EAAYO,EAAG,KAAMM,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,aAAc,OAAQI,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,kBAAmB,OAAQI,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,kBAAmB,KAAMI,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,2BAA4B,KAAMU,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,wBAAyB,KAAMU,EAAAA,cAAoBb,EAAYO,EAAG,KAAMM,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,mBAAoB,KAAMI,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,0BAA2B,KAAMU,EAAAA,cAAoBb,EAAYO,EAAG,KAAMM,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,2BAA4B,UAAWI,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,aAAc,wBAAyBI,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,kCAAmC,KAAMI,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,sCAAuC,KAAMU,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,6BAA8B,KAAMO,EAAAA,cAAoBb,EAAYO,EAAG,KAAM,8NAA+N,KAAMM,EAAAA,cAAoBb,EAAYO,EAAG,KAAM,kCAAmC,KAAMM,EAAAA,cAAoBb,EAAYO,EAAG,KAAM,oHAAqH,KAAMM,EAAAA,cAAoBb,EAAYO,EAAG,KAAM,oEAAqE,KAAMM,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,uCAAwC,KAAMO,EAAAA,cAAoBb,EAAYO,EAAG,KAAM,+FAAgG,KAAMM,EAAAA,cAAoBb,EAAYU,GAAI,KAAM,KAAMG,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,0BAA2B,KAAMQ,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,0EAA2E,KAAMQ,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,+DAAgE,KAAMQ,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,kDAAmD,MACllF,CAKA,MAJA,SAAoBN,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGS,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWjB,EAAOc,EAAAA,cAAoBf,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCjBe,SAASkB,EAAiBlB,GACvC,OAAOc,EAAAA,cAAoBK,EAAAA,EAAenB,EAAOc,EAAAA,cAAoBM,EAAqBpB,GAC5F,CAHAmB,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/git/2022-04-13-git-stash.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"stash 는 언제 사용했었지?\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"a 브렌치에서 작업하다 커밋 안하고 b 브렌치 작업을 해야 할때\"), \"\\n\", React.createElement(_components.li, null, \"a 에서 작업하는 중,master 에 머지된거 pull 받아야함 => stash 하고 pull 받고 stash pop 함\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"git stash 로 보관되는 상태는?\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://git-scm.com/book/ko/v2/Git-%EB%8F%84%EA%B5%AC-Stashing%EA%B3%BC-Cleaning\"\n  }, \"Stash는 Modified 이면서 Tracked 상태인 파일과 Staging Area에 있는 파일들을 보관해두는 장소\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"git add .\"), \" 로 변경된 내용 상태를 변경하고 git stash 사용해야함\"), \"\\n\", React.createElement(_components.h3, null, \"stash 명령어\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"git stash\"), \"\\r\\n\", React.createElement(_components.code, null, \"git stash list\"), \"\\r\\n\", React.createElement(_components.code, null, \"git stash pop\")), \"\\n\", React.createElement(_components.h3, null, \"stash pop ? apply ?....\"), \"\\n\", React.createElement(_components.h3, null, \"stash list 를 어떻게 삭제?\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"git stash drop\")), \"\\n\", React.createElement(_components.h3, null, \"여러개 stash 중 원하는 것 만 적용\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"git stash apply {index}\"), \"\\r\\nor \", React.createElement(_components.code, null, \"stash@{1}\"), \" 처럼 index 지정해서 적용\\r\\n\", React.createElement(_components.code, null, \"git stash apply stash@{index}\")), \"\\n\", React.createElement(_components.h3, null, \"origin branch 에 stash 하고 push 한다면?\"), \"\\n\", React.createElement(_components.h1, null, \"stash 가 남았던 경험 (20220612)\"), \"\\n\", React.createElement(_components.p, null, \"최초 프로젝트의 경우 fork 를 떠서 origin 으로 머지하는 방식으로 했다 (나눔플랫폼)\\r\\n기관플랫폼은 리더 시니어가 origin 에서 작업하고 올리는 거로 결정했다\\r\\n=> 다른 사람의 branch 에 접근 가능하여 변경할 수 있는 위험이 있는데도 그렇게 결정하셨다.\\r\\n=> 정확한 상황은 못봤지만 배포시 fork해서 작업을 따서 머지합칠때 문제가 있었는데... 기억이...\"), \"\\n\", React.createElement(_components.p, null, \"그런데 지난주 기관플랫폼을 하면서 이상한 점을 발견했다\"), \"\\n\", React.createElement(_components.p, null, \"fork 하지 않고 작업하니 origin 에서 바로 브렌치를 만들고\\r\\n작업하다 stash 도 한다..\\r\\n그런데 stash를 drop 하거나 pop하지 않고 origin/dev 으로 push 하니\"), \"\\n\", React.createElement(_components.p, null, \"나중에 origin/dev 를 pull 받았을때  stash 했던 데이터가 남아있었다 => 이건 실험좀 해봐야겠다.\"), \"\\n\", React.createElement(_components.h1, null, \"origin 저장소에서 branch 를 생성해 stash 해보자\"), \"\\n\", React.createElement(_components.p, null, \"origin 저장소에 branch를 생성한다면\\r\\n다른 사람의 접근이 가능하다.\\r\\nex) git stash 를 했을 때 다른사람의 stash 도 볼 수 있다?\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Stash는 로컬 저장소(로컬에만 존재)\"), \"\\n\", React.createElement(_components.li, null, \"stash는 로컬 변경 사항을 임시로 저장하는 도구이므로 stash된 내용은 push할 때 remote 저장소로 전달되지 않음\"), \"\\n\", React.createElement(_components.li, null, \"다른 사람이 remote origin에서 pull 받더라도 당신의 stash는 다른 사람에게 공유되지 않음\"), \"\\n\", React.createElement(_components.li, null, \"stash 내용은 commit되지 않으면 remote origin에 포함되지 않음.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/gwiyeom/Documents/etc/gwiyeomgo.github.io/content/posts/git/2022-04-13-git-stash.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","ol","li","h1","p","a","code","ul","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}