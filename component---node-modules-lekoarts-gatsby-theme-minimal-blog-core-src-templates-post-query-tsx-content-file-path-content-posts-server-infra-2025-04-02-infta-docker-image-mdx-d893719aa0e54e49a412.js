"use strict";(self.webpackChunkgwiyeom_blog=self.webpackChunkgwiyeom_blog||[]).push([[884],{8782:function(e,n,l){l.r(n),l.d(n,{Head:function(){return u.p},default:function(){return o}});var t=l(6540),r=l(8453);function c(e){const n=Object.assign({p:"p",code:"code",h1:"h1",h2:"h2",pre:"pre",h3:"h3",ul:"ul",li:"li",strong:"strong",hr:"hr",ol:"ol",blockquote:"blockquote"},(0,r.RP)(),e.components);return t.createElement(t.Fragment,null,t.createElement(n.p,null,t.createElement(n.code,null,"docker images | grep {project이름}")),"\n",t.createElement(n.h1,null,"Docker Push 실패: 413 Request Entity Too Large 해결 사례"),"\n",t.createElement(n.h2,null,"문제 상황"),"\n",t.createElement(n.p,null,"Docker 이미지 빌드 후 ",t.createElement(n.code,null,"docker push")," 과정에서 아래와 같은 오류 발생:"),"\n",t.createElement(n.pre,null,t.createElement(n.code,null,"error parsing HTTP 413 response body: invalid character '<' looking for beginning of value: \"<html>...<h1>413 Request Entity Too Large</h1>...</html>\"\n")),"\n",t.createElement(n.h3,null,"원인"),"\n",t.createElement(n.ul,null,"\n",t.createElement(n.li,null,"Docker 이미지가 ",t.createElement(n.strong,null,"500MB 이상"),"으로 커짐"),"\n",t.createElement(n.li,null,"Docker Registry 앞단의 ",t.createElement(n.strong,null,"Nginx"),"가 ",t.createElement(n.code,null,"client_max_body_size")," 제한으로 인해 push 요청을 차단"),"\n",t.createElement(n.li,null,"하지만 ",t.createElement(n.strong,null,"Nginx 설정 변경이 불가능한 환경"),"이었음 (",t.createElement(n.code,null,"client_max_body_size")," 수정 불가)"),"\n"),"\n",t.createElement(n.hr),"\n",t.createElement(n.h2,null,"해결 방법"),"\n",t.createElement(n.h3,null,"전략: ",t.createElement(n.strong,null,"Docker 이미지 자체를 경량화하여 push 허용 범위 안으로 줄이기")),"\n",t.createElement(n.h3,null,"적용한 최적화 방법"),"\n",t.createElement(n.ol,null,"\n",t.createElement(n.li,null,"\n",t.createElement(n.p,null,t.createElement(n.strong,null,"Base Image 변경")),"\n",t.createElement(n.ul,null,"\n",t.createElement(n.li,null,"기존: ",t.createElement(n.code,null,"node:22")),"\n",t.createElement(n.li,null,"변경: ",t.createElement(n.code,null,"node:22-alpine"),"\n→ Alpine 기반 Node 이미지로 용량 최소화 (약 30~50MB 수준)"),"\n"),"\n"),"\n",t.createElement(n.li,null,"\n",t.createElement(n.p,null,t.createElement(n.strong,null,"멀티 스테이지 Dockerfile 유지")),"\n",t.createElement(n.ul,null,"\n",t.createElement(n.li,null,"Build 스테이지에서만 ",t.createElement(n.code,null,"yarn install")," + ",t.createElement(n.code,null,"yarn build")),"\n",t.createElement(n.li,null,"Runtime 스테이지에는 빌드된 결과물만 복사"),"\n"),"\n"),"\n",t.createElement(n.li,null,"\n",t.createElement(n.p,null,t.createElement(n.strong,null,"런타임 스테이지에서 ",t.createElement(n.code,null,"yarn install --production")," 제거")),"\n",t.createElement(n.ul,null,"\n",t.createElement(n.li,null,"대신 Build 스테이지에서 설치된 ",t.createElement(n.code,null,"node_modules"),"를 그대로 복사"),"\n",t.createElement(n.li,null,"불필요한 재설치 제거로 용량 절감"),"\n"),"\n"),"\n"),"\n",t.createElement(n.h3,null,"최종 Dockerfile 핵심 부분"),"\n",t.createElement(n.pre,null,t.createElement(n.code,null,'FROM node:22-alpine AS builder\n\nWORKDIR /app\nRUN corepack enable\n\nCOPY package.json yarn.lock* ./\nRUN yarn install --production\n\nCOPY . .\nRUN yarn build\n\nFROM node:22-alpine\n\nWORKDIR /app\nRUN corepack enable\n\nCOPY package.json yarn.lock* ./\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY --from=builder /app/dist ./dist\n\nEXPOSE 9010\nCMD ["node", "dist/main"]\n')),"\n",t.createElement(n.hr),"\n",t.createElement(n.h2,null,"결과"),"\n",t.createElement(n.ul,null,"\n",t.createElement(n.li,null,"이미지 용량: ",t.createElement(n.strong,null,"약 700MB → 500MB 이하로 감소")),"\n",t.createElement(n.li,null,t.createElement(n.code,null,"413 Request Entity Too Large")," 오류 해결"),"\n",t.createElement(n.li,null,"별도 인프라 설정 변경 없이 문제 해결"),"\n"),"\n",t.createElement(n.hr),"\n",t.createElement(n.h2,null,"결론"),"\n",t.createElement(n.p,null,"Nginx 설정 변경이 불가능한 환경에서는 ",t.createElement(n.strong,null,"이미지 자체를 슬림하게 최적화하는 것이 가장 현실적인 해결책"),"이다."),"\n",t.createElement(n.blockquote,null,"\n",t.createElement(n.p,null,"작은 이미지는 빠른 배포, 적은 네트워크 전송량, 보안 노출 최소화에도 효과적"),"\n"))}var a=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.RP)(),e.components);return n?t.createElement(n,e,t.createElement(c,e)):c(e)},u=l(7292);function o(e){return t.createElement(u.A,e,t.createElement(a,e))}u.A}}]);
//# sourceMappingURL=component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-infra-2025-04-02-infta-docker-image-mdx-d893719aa0e54e49a412.js.map