{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-golang-2025-05-12-go-connection-full-mdx-8dbdfffceac526000bb3.js","mappings":"kNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,MAAO,KAAMM,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,oBAAqB,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,kJAAmJ,KAAMK,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,WAAY,KAAMM,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,gLAAiL,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,sIAAuI,KAAMK,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,8BAA+B,KAAMM,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,iKAAkK,KAAMK,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,KAAM,SACzrC,CAKA,MAJA,SAAoBP,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWZ,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCXe,SAASa,EAAiBb,GACvC,OAAOU,EAAAA,cAAoBI,EAAAA,EAAed,EAAOU,EAAAA,cAAoBK,EAAqBf,GAC5F,CAHAc,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/server/golang/2025-05-12-go-connection-full.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"DB 부하가 발생하는 상황에서\"), \"\\n\", React.createElement(_components.p, null, \"디비에 대기 상태 건들이 계속 유지되고 있어서\\n일단 풀 안에 놀고 있는 연결 수\\n(SetMaxIdleConns)를 10에서 2로 줄였다\\n부하에 대한 여러 원인이 있기때문에\\n큰 효과는 없었지만\\n커넥션풀이 정확이 무엇이며 어떻게 설정하는지 정리해보자\"), \"\\n\", React.createElement(_components.h1, null, \"DB 커넥션풀\"), \"\\n\", React.createElement(_components.p, null, \"서버와 DB는 네트워크 통신을 통해 연결되며\\n네트워크 연결을 생성하고 종료하는데 0.5~1초 소요된다\\n연결,종료 시간은 전체 응답 시간에 영향을 준다\\n응답 시간이 길어지면 전체 처리량 떨어진다\\n매 요청마다 DB 연결하고 종료하면 트래픽 급증시 처리량 떨어진다\\n이 문제를 피하기 위해 커넥션풀 사용한다\"), \"\\n\", React.createElement(_components.p, null, \"DB 커넥션 풀은 연결된 커넥션을 미리 생성해서 보관한다\\n애플리케이션은 DB 작업이 필요할 때 풀에서 커넥션을 가져와 사용 작업이 끝나면 다시 풀에 반환한다\\n이미 연결된 커넥션을 재사용하기 떄문에 응답 시간이 줄어드는 장점이 있다\"), \"\\n\", React.createElement(_components.h1, null, \"golang 에서 xorm 에서 커넥션 풀 설정\"), \"\\n\", React.createElement(_components.p, null, \"xormDb.SetMaxOpenConns(10) //최대 동시 연결 수\\nxormDb.SetMaxIdleConns(2) //사용되지 않고 대기 상태(idle)\\nxormDb.SetConnMaxLifetime(10 * time.Minute) //하나의 연결을 최대 10분까지만 재사용\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"\\n\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/golang/2025-05-12-go-connection-full.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","pre","code","_provideComponents","components","React","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}