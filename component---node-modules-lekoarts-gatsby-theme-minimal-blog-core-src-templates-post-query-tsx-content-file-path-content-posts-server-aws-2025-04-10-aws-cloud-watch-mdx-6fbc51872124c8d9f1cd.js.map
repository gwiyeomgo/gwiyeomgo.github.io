{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-server-aws-2025-04-10-aws-cloud-watch-mdx-6fbc51872124c8d9f1cd.js","mappings":"mNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,WAAY,aACZC,EAAG,MACFC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,GAAI,KAAM,sCAAuC,KAAMK,EAAAA,cAAoBR,EAAYI,WAAY,KAAM,KAAMI,EAAAA,cAAoBR,EAAYK,EAAG,KAAM,8DAA+D,MAAO,KAAMG,EAAAA,cAAoBR,EAAYK,EAAG,KAAM,iDAAkD,KAAMG,EAAAA,cAAoBR,EAAYG,GAAI,KAAM,4CAClc,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWX,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCVe,SAASY,EAAiBZ,GACvC,OAAOS,EAAAA,cAAoBI,EAAAA,EAAeb,EAAOS,EAAAA,cAAoBK,EAAqBd,GAC5F,CAHAa,EAAAA,C","sources":["webpack://gwiyeom-blog/./content/posts/server/aws/2025-04-10-aws-cloudWatch.mdx","webpack://gwiyeom-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    blockquote: \"blockquote\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"CloudWatch = 로그를 저장하고 콘솔에서 확인하는 기능\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"CloudWatch는 AWS에서 제공하는 로그, 메트릭, 알람, 이벤트 추적을 위한 통합 모니터링 서비스\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"로그 수집\\tEC2, Lambda, ECS, EKS 등에서 로그를 전송할 수 있음\"), \"\\n\", React.createElement(_components.h1, null, \"EC2나 EKS에서 CloudWatch로 로그 어떻게 보내는거지? 설정?\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/gwiyeomgo.github.io/gwiyeomgo.github.io/content/posts/server/aws/2025-04-10-aws-cloudWatch.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","blockquote","p","_provideComponents","components","React","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}